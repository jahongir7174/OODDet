{"env_info": "sys.platform: linux\nPython: 3.8.12 | packaged by conda-forge | (default, Oct 12 2021, 21:59:51) [GCC 9.4.0]\nCUDA available: True\nGPU 0,1,2,3,4: NVIDIA RTX A6000\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.6, V11.6.55\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.11.0a0+17540c5\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2019.0.5 Product Build 20190808 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.3.3 (Git Hash N/A)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_86,code=compute_86\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS=-fno-gnu-unique -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0a0\nOpenCV: 4.5.5\nMMCV: 1.6.1\nMMCV Compiler: GCC 9.4\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.25.2+", "config": "base = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0'\nckpt = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_large_patch4_window7_224_22k.pth'\nmodel = dict(\n    type='DualDet',\n    backbone=dict(\n        type='DualViT',\n        embed_dims=192,\n        depths=[2, 2, 18, 2],\n        num_heads=[6, 12, 24, 48],\n        drop_path_rate=0.3,\n        convert_weights=True,\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_large_patch4_window7_224_22k.pth'\n        )),\n    neck=dict(\n        type='DualFPN',\n        in_channels=[192, 384, 768, 1536],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='BoxHead',\n                num_classes=10,\n                reg_class_agnostic=True,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='BoxHead',\n                num_classes=10,\n                reg_class_agnostic=True,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='BoxHead',\n                num_classes=10,\n                reg_class_agnostic=True,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                ignore_iof_thr=-1,\n                match_low_quality=True),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                neg_pos_ub=-1,\n                pos_fraction=0.5,\n                add_gt_as_proposals=False),\n            debug=False,\n            pos_weight=-1,\n            allowed_border=-1),\n        rpn_proposal=dict(\n            nms=dict(type='nms', iou_threshold=0.7),\n            nms_pre=2000,\n            min_bbox_size=0,\n            max_per_img=1000),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    ignore_iof_thr=-1,\n                    match_low_quality=True),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    neg_pos_ub=-1,\n                    pos_fraction=0.25,\n                    add_gt_as_proposals=True),\n                debug=False,\n                mask_size=28,\n                pos_weight=-1),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    ignore_iof_thr=-1,\n                    match_low_quality=True),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    neg_pos_ub=-1,\n                    pos_fraction=0.25,\n                    add_gt_as_proposals=True),\n                debug=False,\n                mask_size=28,\n                pos_weight=-1),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    ignore_iof_thr=-1,\n                    match_low_quality=True),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    neg_pos_ub=-1,\n                    pos_fraction=0.25,\n                    add_gt_as_proposals=True),\n                debug=False,\n                mask_size=28,\n                pos_weight=-1)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms=dict(type='nms', iou_threshold=0.7),\n            nms_pre=1000,\n            min_bbox_size=0,\n            max_per_img=1000),\n        rcnn=dict(\n            nms=dict(type='nms', iou_threshold=0.5),\n            score_thr=0.05,\n            max_per_img=100)))\ndataset_type = 'ROBINDataset'\ndata_root = '../Dataset/ROBINv1.1/'\nsamples_per_gpu = 1\nworkers_per_gpu = 4\nimage_norm = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile', to_float32=False, color_type='color'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=False),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 800)],\n        multiscale_mode='range',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='MixAugment'),\n    dict(type='GridMask'),\n    dict(type='Weather'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=4,\n    train=dict(\n        type='ROBINDataset',\n        ann_file='../Dataset/ROBINv1.1/train/train.json',\n        pipeline=[\n            dict(\n                type='LoadImageFromFile', to_float32=False,\n                color_type='color'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=False),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 800)],\n                multiscale_mode='range',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(type='MixAugment'),\n            dict(type='GridMask'),\n            dict(type='Weather'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='ROBINDataset',\n        ann_file='../Dataset/ROBINv1.1/iid_test/iid.json',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='ROBINDataset',\n        ann_file='../Dataset/ROBINv1.1/iid_test/iid.json',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\noptimizer = dict(\n    type='AdamW',\n    lr=0.0001,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            norm=dict(decay_mult=0.0),\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=None)\nfp16 = dict(loss_scale='dynamic')\nlr_config = dict(\n    step=[8, 11],\n    policy='step',\n    warmup='linear',\n    warmup_iters=1000,\n    warmup_ratio=0.001)\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=12)\nevaluation = dict(interval=12, metric='bbox')\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=True, base_batch_size=16)\nwork_dir = './weights/exp10'\ngpu_ids = range(0, 5)\n", "seed": 0, "exp_name": "exp10.py"}
{"env_info": "sys.platform: linux\nPython: 3.8.12 | packaged by conda-forge | (default, Oct 12 2021, 21:59:51) [GCC 9.4.0]\nCUDA available: True\nGPU 0,1,2,3,4: NVIDIA RTX A6000\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.6, V11.6.55\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.11.0a0+17540c5\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2019.0.5 Product Build 20190808 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.3.3 (Git Hash N/A)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_86,code=compute_86\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS=-fno-gnu-unique -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0a0\nOpenCV: 4.5.5\nMMCV: 1.6.1\nMMCV Compiler: GCC 9.4\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.25.2+", "config": "base = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0'\nckpt = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_large_patch4_window7_224_22k.pth'\nmodel = dict(\n    type='DualDet',\n    backbone=dict(\n        type='DualViT',\n        embed_dims=192,\n        depths=[2, 2, 18, 2],\n        num_heads=[6, 12, 24, 48],\n        drop_path_rate=0.3,\n        convert_weights=True,\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_large_patch4_window7_224_22k.pth'\n        )),\n    neck=dict(\n        type='DualFPN',\n        in_channels=[192, 384, 768, 1536],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='BoxHead',\n                num_classes=10,\n                reg_class_agnostic=True,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='BoxHead',\n                num_classes=10,\n                reg_class_agnostic=True,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='BoxHead',\n                num_classes=10,\n                reg_class_agnostic=True,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                ignore_iof_thr=-1,\n                match_low_quality=True),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                neg_pos_ub=-1,\n                pos_fraction=0.5,\n                add_gt_as_proposals=False),\n            debug=False,\n            pos_weight=-1,\n            allowed_border=-1),\n        rpn_proposal=dict(\n            nms=dict(type='nms', iou_threshold=0.7),\n            nms_pre=2000,\n            min_bbox_size=0,\n            max_per_img=1000),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    ignore_iof_thr=-1,\n                    match_low_quality=True),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    neg_pos_ub=-1,\n                    pos_fraction=0.25,\n                    add_gt_as_proposals=True),\n                debug=False,\n                mask_size=28,\n                pos_weight=-1),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    ignore_iof_thr=-1,\n                    match_low_quality=True),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    neg_pos_ub=-1,\n                    pos_fraction=0.25,\n                    add_gt_as_proposals=True),\n                debug=False,\n                mask_size=28,\n                pos_weight=-1),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    ignore_iof_thr=-1,\n                    match_low_quality=True),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    neg_pos_ub=-1,\n                    pos_fraction=0.25,\n                    add_gt_as_proposals=True),\n                debug=False,\n                mask_size=28,\n                pos_weight=-1)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms=dict(type='nms', iou_threshold=0.7),\n            nms_pre=1000,\n            min_bbox_size=0,\n            max_per_img=1000),\n        rcnn=dict(\n            nms=dict(type='nms', iou_threshold=0.5),\n            score_thr=0.05,\n            max_per_img=100)))\ndataset_type = 'ROBINDataset'\ndata_root = '../Dataset/ROBINv1.1/'\nsamples_per_gpu = 1\nworkers_per_gpu = 4\nimage_norm = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile', to_float32=False, color_type='color'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=False),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 800)],\n        multiscale_mode='range',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='MixAugment'),\n    dict(type='GridMask'),\n    dict(type='Weather'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=4,\n    train=dict(\n        type='ROBINDataset',\n        ann_file='../Dataset/ROBINv1.1/train/train.json',\n        pipeline=[\n            dict(\n                type='LoadImageFromFile', to_float32=False,\n                color_type='color'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=False),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 800)],\n                multiscale_mode='range',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(type='MixAugment'),\n            dict(type='GridMask'),\n            dict(type='Weather'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='ROBINDataset',\n        ann_file='../Dataset/ROBINv1.1/iid_test/iid.json',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='ROBINDataset',\n        ann_file='../Dataset/ROBINv1.1/iid_test/iid.json',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\noptimizer = dict(\n    type='AdamW',\n    lr=0.0001,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            norm=dict(decay_mult=0.0),\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=None)\nfp16 = dict(loss_scale='dynamic')\nlr_config = dict(\n    step=[8, 11],\n    policy='step',\n    warmup='linear',\n    warmup_iters=1000,\n    warmup_ratio=0.001)\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=12)\nevaluation = dict(interval=12, metric='bbox')\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=True, base_batch_size=16)\nwork_dir = './weights/exp10'\ngpu_ids = range(0, 5)\n", "seed": 0, "exp_name": "exp10.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.0, "memory": 19635, "data_time": 0.05651, "loss_rpn_cls": 1.09127, "loss_rpn_bbox": 0.0316, "s0.loss_cls": 2.42168, "s0.loss_bbox": 0.00021, "s1.loss_cls": 1.0973, "s1.loss_bbox": 7e-05, "s2.loss_cls": 0.74325, "s2.loss_bbox": 1e-05, "loss": 5.3854, "time": 1.16424}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.0, "memory": 19635, "data_time": 0.00466, "loss_rpn_cls": 0.96221, "loss_rpn_bbox": 0.03232, "s0.loss_cls": 0.47033, "s0.loss_bbox": 0.01396, "s1.loss_cls": 0.22984, "s1.loss_bbox": 0.00352, "s2.loss_cls": 0.17019, "s2.loss_bbox": 0.0004, "loss": 1.88278, "time": 1.06575}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.0, "memory": 19635, "data_time": 0.00433, "loss_rpn_cls": 0.67974, "loss_rpn_bbox": 0.03168, "s0.loss_cls": 0.19969, "s0.loss_bbox": 0.06863, "s1.loss_cls": 0.07926, "s1.loss_bbox": 0.0202, "s2.loss_cls": 0.04013, "s2.loss_bbox": 0.00269, "loss": 1.12202, "time": 1.05432}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 1e-05, "memory": 19635, "data_time": 0.0044, "loss_rpn_cls": 0.38398, "loss_rpn_bbox": 0.0231, "s0.loss_cls": 0.17178, "s0.loss_bbox": 0.0752, "s1.loss_cls": 0.05189, "s1.loss_bbox": 0.031, "s2.loss_cls": 0.0141, "s2.loss_bbox": 0.00526, "loss": 0.7563, "time": 1.04238}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 1e-05, "memory": 19635, "data_time": 0.00469, "loss_rpn_cls": 0.19035, "loss_rpn_bbox": 0.02187, "s0.loss_cls": 0.16057, "s0.loss_bbox": 0.0739, "s1.loss_cls": 0.04983, "s1.loss_bbox": 0.03046, "s2.loss_cls": 0.01398, "s2.loss_bbox": 0.00584, "loss": 0.54679, "time": 1.06552}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 19635, "data_time": 0.00452, "loss_rpn_cls": 0.10152, "loss_rpn_bbox": 0.02204, "s0.loss_cls": 0.17169, "s0.loss_bbox": 0.08026, "s1.loss_cls": 0.05549, "s1.loss_bbox": 0.03589, "s2.loss_cls": 0.01508, "s2.loss_bbox": 0.00695, "loss": 0.48893, "time": 1.04789}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 19635, "data_time": 0.00431, "loss_rpn_cls": 0.0724, "loss_rpn_bbox": 0.02236, "s0.loss_cls": 0.15944, "s0.loss_bbox": 0.07648, "s1.loss_cls": 0.05045, "s1.loss_bbox": 0.03216, "s2.loss_cls": 0.01471, "s2.loss_bbox": 0.00668, "loss": 0.43469, "time": 1.04691}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 1e-05, "memory": 19635, "data_time": 0.00449, "loss_rpn_cls": 0.05956, "loss_rpn_bbox": 0.01952, "s0.loss_cls": 0.15848, "s0.loss_bbox": 0.07669, "s1.loss_cls": 0.05203, "s1.loss_bbox": 0.03367, "s2.loss_cls": 0.01418, "s2.loss_bbox": 0.00627, "loss": 0.4204, "time": 1.03798}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 1e-05, "memory": 19635, "data_time": 0.00441, "loss_rpn_cls": 0.0552, "loss_rpn_bbox": 0.02033, "s0.loss_cls": 0.15094, "s0.loss_bbox": 0.07429, "s1.loss_cls": 0.04889, "s1.loss_bbox": 0.03255, "s2.loss_cls": 0.01355, "s2.loss_bbox": 0.00644, "loss": 0.40219, "time": 1.06426}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 2e-05, "memory": 19635, "data_time": 0.00445, "loss_rpn_cls": 0.05212, "loss_rpn_bbox": 0.02079, "s0.loss_cls": 0.16651, "s0.loss_bbox": 0.0823, "s1.loss_cls": 0.05168, "s1.loss_bbox": 0.03348, "s2.loss_cls": 0.01412, "s2.loss_bbox": 0.00652, "loss": 0.42752, "time": 1.06634}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 2e-05, "memory": 19635, "data_time": 0.00435, "loss_rpn_cls": 0.04926, "loss_rpn_bbox": 0.02199, "s0.loss_cls": 0.14454, "s0.loss_bbox": 0.07749, "s1.loss_cls": 0.04724, "s1.loss_bbox": 0.03324, "s2.loss_cls": 0.0134, "s2.loss_bbox": 0.00658, "loss": 0.39373, "time": 1.06326}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 2e-05, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.04928, "loss_rpn_bbox": 0.02118, "s0.loss_cls": 0.14546, "s0.loss_bbox": 0.07927, "s1.loss_cls": 0.05329, "s1.loss_bbox": 0.03955, "s2.loss_cls": 0.01497, "s2.loss_bbox": 0.0078, "loss": 0.41082, "time": 1.0563}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 2e-05, "memory": 19635, "data_time": 0.00443, "loss_rpn_cls": 0.04626, "loss_rpn_bbox": 0.01859, "s0.loss_cls": 0.13581, "s0.loss_bbox": 0.08348, "s1.loss_cls": 0.04904, "s1.loss_bbox": 0.03985, "s2.loss_cls": 0.01396, "s2.loss_bbox": 0.00754, "loss": 0.39454, "time": 1.06369}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 2e-05, "memory": 19635, "data_time": 0.00484, "loss_rpn_cls": 0.04204, "loss_rpn_bbox": 0.01874, "s0.loss_cls": 0.1318, "s0.loss_bbox": 0.08148, "s1.loss_cls": 0.04756, "s1.loss_bbox": 0.03866, "s2.loss_cls": 0.01418, "s2.loss_bbox": 0.00804, "loss": 0.3825, "time": 1.07437}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 2e-05, "memory": 19635, "data_time": 0.0043, "loss_rpn_cls": 0.03827, "loss_rpn_bbox": 0.01801, "s0.loss_cls": 0.123, "s0.loss_bbox": 0.08157, "s1.loss_cls": 0.04768, "s1.loss_bbox": 0.04474, "s2.loss_cls": 0.01414, "s2.loss_bbox": 0.00932, "loss": 0.37672, "time": 1.05456}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 2e-05, "memory": 19635, "data_time": 0.00449, "loss_rpn_cls": 0.04326, "loss_rpn_bbox": 0.02057, "s0.loss_cls": 0.11425, "s0.loss_bbox": 0.07362, "s1.loss_cls": 0.0486, "s1.loss_bbox": 0.04755, "s2.loss_cls": 0.01542, "s2.loss_bbox": 0.01145, "loss": 0.37473, "time": 1.05455}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 3e-05, "memory": 19635, "data_time": 0.00462, "loss_rpn_cls": 0.03493, "loss_rpn_bbox": 0.01814, "s0.loss_cls": 0.11407, "s0.loss_bbox": 0.07017, "s1.loss_cls": 0.05143, "s1.loss_bbox": 0.053, "s2.loss_cls": 0.01767, "s2.loss_bbox": 0.01464, "loss": 0.37405, "time": 1.06527}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 3e-05, "memory": 19635, "data_time": 0.00462, "loss_rpn_cls": 0.03213, "loss_rpn_bbox": 0.01985, "s0.loss_cls": 0.10156, "s0.loss_bbox": 0.06379, "s1.loss_cls": 0.04694, "s1.loss_bbox": 0.05328, "s2.loss_cls": 0.01821, "s2.loss_bbox": 0.01857, "loss": 0.35433, "time": 1.05329}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 3e-05, "memory": 19635, "data_time": 0.00465, "loss_rpn_cls": 0.02581, "loss_rpn_bbox": 0.01704, "s0.loss_cls": 0.1011, "s0.loss_bbox": 0.06146, "s1.loss_cls": 0.04889, "s1.loss_bbox": 0.05502, "s2.loss_cls": 0.0203, "s2.loss_bbox": 0.02414, "loss": 0.35378, "time": 1.0464}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 3e-05, "memory": 19635, "data_time": 0.00452, "loss_rpn_cls": 0.02455, "loss_rpn_bbox": 0.02324, "s0.loss_cls": 0.0929, "s0.loss_bbox": 0.05475, "s1.loss_cls": 0.05076, "s1.loss_bbox": 0.05758, "s2.loss_cls": 0.02511, "s2.loss_bbox": 0.03222, "loss": 0.36111, "time": 1.0629}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 3e-05, "memory": 19635, "data_time": 0.00427, "loss_rpn_cls": 0.03018, "loss_rpn_bbox": 0.01578, "s0.loss_cls": 0.0878, "s0.loss_bbox": 0.05076, "s1.loss_cls": 0.05411, "s1.loss_bbox": 0.06424, "s2.loss_cls": 0.02678, "s2.loss_bbox": 0.04169, "loss": 0.37135, "time": 1.05266}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 3e-05, "memory": 19635, "data_time": 0.00443, "loss_rpn_cls": 0.02381, "loss_rpn_bbox": 0.01586, "s0.loss_cls": 0.08462, "s0.loss_bbox": 0.04474, "s1.loss_cls": 0.05282, "s1.loss_bbox": 0.0596, "s2.loss_cls": 0.02893, "s2.loss_bbox": 0.04394, "loss": 0.35432, "time": 1.05477}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 3e-05, "memory": 19635, "data_time": 0.00459, "loss_rpn_cls": 0.02847, "loss_rpn_bbox": 0.01978, "s0.loss_cls": 0.08493, "s0.loss_bbox": 0.04531, "s1.loss_cls": 0.05395, "s1.loss_bbox": 0.06181, "s2.loss_cls": 0.03053, "s2.loss_bbox": 0.04568, "loss": 0.37046, "time": 1.06102}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 3e-05, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.0225, "loss_rpn_bbox": 0.01372, "s0.loss_cls": 0.08649, "s0.loss_bbox": 0.04438, "s1.loss_cls": 0.05713, "s1.loss_bbox": 0.06698, "s2.loss_cls": 0.03204, "s2.loss_bbox": 0.05857, "loss": 0.3818, "time": 1.06177}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 3e-05, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.02984, "loss_rpn_bbox": 0.01785, "s0.loss_cls": 0.07364, "s0.loss_bbox": 0.04426, "s1.loss_cls": 0.05486, "s1.loss_bbox": 0.06936, "s2.loss_cls": 0.03298, "s2.loss_bbox": 0.05488, "loss": 0.37767, "time": 1.05178}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 3e-05, "memory": 19635, "data_time": 0.00428, "loss_rpn_cls": 0.0215, "loss_rpn_bbox": 0.01234, "s0.loss_cls": 0.06666, "s0.loss_bbox": 0.03724, "s1.loss_cls": 0.04911, "s1.loss_bbox": 0.06256, "s2.loss_cls": 0.02909, "s2.loss_bbox": 0.05974, "loss": 0.33824, "time": 1.04186}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 3e-05, "memory": 19635, "data_time": 0.0045, "loss_rpn_cls": 0.02097, "loss_rpn_bbox": 0.01511, "s0.loss_cls": 0.066, "s0.loss_bbox": 0.03651, "s1.loss_cls": 0.04986, "s1.loss_bbox": 0.06747, "s2.loss_cls": 0.03, "s2.loss_bbox": 0.06247, "loss": 0.3484, "time": 1.0707}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 3e-05, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.02278, "loss_rpn_bbox": 0.01281, "s0.loss_cls": 0.06949, "s0.loss_bbox": 0.03834, "s1.loss_cls": 0.05137, "s1.loss_bbox": 0.06944, "s2.loss_cls": 0.03236, "s2.loss_bbox": 0.06169, "loss": 0.35826, "time": 1.06441}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 3e-05, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.02101, "loss_rpn_bbox": 0.01468, "s0.loss_cls": 0.07182, "s0.loss_bbox": 0.03976, "s1.loss_cls": 0.05234, "s1.loss_bbox": 0.06927, "s2.loss_cls": 0.03098, "s2.loss_bbox": 0.06567, "loss": 0.36553, "time": 1.04428}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 3e-05, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.02219, "loss_rpn_bbox": 0.01762, "s0.loss_cls": 0.07187, "s0.loss_bbox": 0.03716, "s1.loss_cls": 0.05179, "s1.loss_bbox": 0.07075, "s2.loss_cls": 0.03206, "s2.loss_bbox": 0.0655, "loss": 0.36895, "time": 1.05959}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 3e-05, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.01693, "loss_rpn_bbox": 0.01362, "s0.loss_cls": 0.05907, "s0.loss_bbox": 0.03237, "s1.loss_cls": 0.05549, "s1.loss_bbox": 0.07362, "s2.loss_cls": 0.03392, "s2.loss_bbox": 0.06975, "loss": 0.35476, "time": 1.06857}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 3e-05, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.01744, "loss_rpn_bbox": 0.01362, "s0.loss_cls": 0.05619, "s0.loss_bbox": 0.0321, "s1.loss_cls": 0.05206, "s1.loss_bbox": 0.0672, "s2.loss_cls": 0.03189, "s2.loss_bbox": 0.06689, "loss": 0.33737, "time": 1.06036}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 3e-05, "memory": 19635, "data_time": 0.06382, "loss_rpn_cls": 0.01824, "loss_rpn_bbox": 0.01386, "s0.loss_cls": 0.06562, "s0.loss_bbox": 0.03565, "s1.loss_cls": 0.05049, "s1.loss_bbox": 0.06478, "s2.loss_cls": 0.03172, "s2.loss_bbox": 0.06871, "loss": 0.34908, "time": 1.1254}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 3e-05, "memory": 19635, "data_time": 0.00462, "loss_rpn_cls": 0.02093, "loss_rpn_bbox": 0.01621, "s0.loss_cls": 0.0627, "s0.loss_bbox": 0.03271, "s1.loss_cls": 0.05329, "s1.loss_bbox": 0.06927, "s2.loss_cls": 0.03399, "s2.loss_bbox": 0.06802, "loss": 0.35712, "time": 1.06933}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 3e-05, "memory": 19635, "data_time": 0.00412, "loss_rpn_cls": 0.02144, "loss_rpn_bbox": 0.01659, "s0.loss_cls": 0.06456, "s0.loss_bbox": 0.03454, "s1.loss_cls": 0.05148, "s1.loss_bbox": 0.06991, "s2.loss_cls": 0.03109, "s2.loss_bbox": 0.06959, "loss": 0.35919, "time": 1.05946}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.01886, "loss_rpn_bbox": 0.01406, "s0.loss_cls": 0.06689, "s0.loss_bbox": 0.03811, "s1.loss_cls": 0.04646, "s1.loss_bbox": 0.06447, "s2.loss_cls": 0.02873, "s2.loss_bbox": 0.06487, "loss": 0.34244, "time": 1.05631}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 3e-05, "memory": 19635, "data_time": 0.00394, "loss_rpn_cls": 0.01839, "loss_rpn_bbox": 0.01071, "s0.loss_cls": 0.05678, "s0.loss_bbox": 0.03034, "s1.loss_cls": 0.04303, "s1.loss_bbox": 0.05768, "s2.loss_cls": 0.0289, "s2.loss_bbox": 0.06388, "loss": 0.30971, "time": 1.04385}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 3e-05, "memory": 19635, "data_time": 0.00449, "loss_rpn_cls": 0.01737, "loss_rpn_bbox": 0.01321, "s0.loss_cls": 0.05673, "s0.loss_bbox": 0.03114, "s1.loss_cls": 0.04234, "s1.loss_bbox": 0.06291, "s2.loss_cls": 0.02877, "s2.loss_bbox": 0.06637, "loss": 0.31885, "time": 1.07083}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 3e-05, "memory": 19635, "data_time": 0.00412, "loss_rpn_cls": 0.01879, "loss_rpn_bbox": 0.01211, "s0.loss_cls": 0.0603, "s0.loss_bbox": 0.03198, "s1.loss_cls": 0.04939, "s1.loss_bbox": 0.06967, "s2.loss_cls": 0.03194, "s2.loss_bbox": 0.07695, "loss": 0.35114, "time": 1.0537}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 3e-05, "memory": 19635, "data_time": 0.00456, "loss_rpn_cls": 0.02159, "loss_rpn_bbox": 0.01388, "s0.loss_cls": 0.06633, "s0.loss_bbox": 0.03545, "s1.loss_cls": 0.04985, "s1.loss_bbox": 0.06812, "s2.loss_cls": 0.03117, "s2.loss_bbox": 0.06948, "loss": 0.35586, "time": 1.03671}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 3e-05, "memory": 19635, "data_time": 0.00408, "loss_rpn_cls": 0.01954, "loss_rpn_bbox": 0.01473, "s0.loss_cls": 0.06896, "s0.loss_bbox": 0.03532, "s1.loss_cls": 0.05397, "s1.loss_bbox": 0.06882, "s2.loss_cls": 0.03533, "s2.loss_bbox": 0.06707, "loss": 0.36374, "time": 1.06145}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 3e-05, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.01494, "loss_rpn_bbox": 0.01187, "s0.loss_cls": 0.05862, "s0.loss_bbox": 0.02996, "s1.loss_cls": 0.04756, "s1.loss_bbox": 0.06586, "s2.loss_cls": 0.03112, "s2.loss_bbox": 0.0698, "loss": 0.32974, "time": 1.04133}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 3e-05, "memory": 19635, "data_time": 0.00437, "loss_rpn_cls": 0.02126, "loss_rpn_bbox": 0.01422, "s0.loss_cls": 0.05701, "s0.loss_bbox": 0.02981, "s1.loss_cls": 0.05192, "s1.loss_bbox": 0.07214, "s2.loss_cls": 0.03737, "s2.loss_bbox": 0.07825, "loss": 0.36197, "time": 1.04783}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 3e-05, "memory": 19635, "data_time": 0.00467, "loss_rpn_cls": 0.0181, "loss_rpn_bbox": 0.01447, "s0.loss_cls": 0.05443, "s0.loss_bbox": 0.0308, "s1.loss_cls": 0.04946, "s1.loss_bbox": 0.06231, "s2.loss_cls": 0.03147, "s2.loss_bbox": 0.06491, "loss": 0.32595, "time": 1.06277}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 3e-05, "memory": 19635, "data_time": 0.0039, "loss_rpn_cls": 0.01754, "loss_rpn_bbox": 0.01251, "s0.loss_cls": 0.04994, "s0.loss_bbox": 0.02691, "s1.loss_cls": 0.04757, "s1.loss_bbox": 0.07111, "s2.loss_cls": 0.03277, "s2.loss_bbox": 0.08096, "loss": 0.33931, "time": 1.04933}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 3e-05, "memory": 19635, "data_time": 0.00413, "loss_rpn_cls": 0.01936, "loss_rpn_bbox": 0.01272, "s0.loss_cls": 0.05616, "s0.loss_bbox": 0.02943, "s1.loss_cls": 0.04493, "s1.loss_bbox": 0.0653, "s2.loss_cls": 0.03112, "s2.loss_bbox": 0.0714, "loss": 0.33042, "time": 1.05566}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 3e-05, "memory": 19635, "data_time": 0.00389, "loss_rpn_cls": 0.01915, "loss_rpn_bbox": 0.01277, "s0.loss_cls": 0.06378, "s0.loss_bbox": 0.03296, "s1.loss_cls": 0.04989, "s1.loss_bbox": 0.06808, "s2.loss_cls": 0.03274, "s2.loss_bbox": 0.0696, "loss": 0.34896, "time": 1.04603}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 3e-05, "memory": 19635, "data_time": 0.00402, "loss_rpn_cls": 0.01609, "loss_rpn_bbox": 0.01294, "s0.loss_cls": 0.0534, "s0.loss_bbox": 0.02677, "s1.loss_cls": 0.04528, "s1.loss_bbox": 0.06495, "s2.loss_cls": 0.02878, "s2.loss_bbox": 0.07409, "loss": 0.32228, "time": 1.04348}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 3e-05, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.0144, "loss_rpn_bbox": 0.00978, "s0.loss_cls": 0.05267, "s0.loss_bbox": 0.02683, "s1.loss_cls": 0.04387, "s1.loss_bbox": 0.06275, "s2.loss_cls": 0.02838, "s2.loss_bbox": 0.07183, "loss": 0.31051, "time": 1.0523}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 3e-05, "memory": 19635, "data_time": 0.00423, "loss_rpn_cls": 0.01998, "loss_rpn_bbox": 0.01242, "s0.loss_cls": 0.05169, "s0.loss_bbox": 0.02899, "s1.loss_cls": 0.04255, "s1.loss_bbox": 0.05983, "s2.loss_cls": 0.02891, "s2.loss_bbox": 0.06561, "loss": 0.30997, "time": 1.06046}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 3e-05, "memory": 19635, "data_time": 0.00455, "loss_rpn_cls": 0.01788, "loss_rpn_bbox": 0.01092, "s0.loss_cls": 0.06166, "s0.loss_bbox": 0.03118, "s1.loss_cls": 0.04868, "s1.loss_bbox": 0.06684, "s2.loss_cls": 0.03048, "s2.loss_bbox": 0.07368, "loss": 0.34132, "time": 1.04021}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 3e-05, "memory": 19635, "data_time": 0.00405, "loss_rpn_cls": 0.01686, "loss_rpn_bbox": 0.01035, "s0.loss_cls": 0.06212, "s0.loss_bbox": 0.03513, "s1.loss_cls": 0.04857, "s1.loss_bbox": 0.06831, "s2.loss_cls": 0.03079, "s2.loss_bbox": 0.06759, "loss": 0.33973, "time": 1.04284}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 3e-05, "memory": 19635, "data_time": 0.00409, "loss_rpn_cls": 0.01599, "loss_rpn_bbox": 0.01158, "s0.loss_cls": 0.06442, "s0.loss_bbox": 0.03174, "s1.loss_cls": 0.0546, "s1.loss_bbox": 0.06793, "s2.loss_cls": 0.03426, "s2.loss_bbox": 0.07119, "loss": 0.35171, "time": 1.04956}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 3e-05, "memory": 19635, "data_time": 0.00455, "loss_rpn_cls": 0.01574, "loss_rpn_bbox": 0.01127, "s0.loss_cls": 0.059, "s0.loss_bbox": 0.02725, "s1.loss_cls": 0.04771, "s1.loss_bbox": 0.0599, "s2.loss_cls": 0.03186, "s2.loss_bbox": 0.06674, "loss": 0.31946, "time": 1.04701}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 3e-05, "memory": 19635, "data_time": 0.00391, "loss_rpn_cls": 0.01763, "loss_rpn_bbox": 0.0122, "s0.loss_cls": 0.05468, "s0.loss_bbox": 0.02677, "s1.loss_cls": 0.04478, "s1.loss_bbox": 0.06239, "s2.loss_cls": 0.02897, "s2.loss_bbox": 0.07447, "loss": 0.32189, "time": 1.0345}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 3e-05, "memory": 19635, "data_time": 0.00405, "loss_rpn_cls": 0.01401, "loss_rpn_bbox": 0.00981, "s0.loss_cls": 0.05615, "s0.loss_bbox": 0.02885, "s1.loss_cls": 0.04504, "s1.loss_bbox": 0.06782, "s2.loss_cls": 0.03036, "s2.loss_bbox": 0.07711, "loss": 0.32915, "time": 1.05457}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 3e-05, "memory": 19635, "data_time": 0.00424, "loss_rpn_cls": 0.01613, "loss_rpn_bbox": 0.01196, "s0.loss_cls": 0.05713, "s0.loss_bbox": 0.02927, "s1.loss_cls": 0.0456, "s1.loss_bbox": 0.06346, "s2.loss_cls": 0.03057, "s2.loss_bbox": 0.069, "loss": 0.32311, "time": 1.02748}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 3e-05, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.01338, "loss_rpn_bbox": 0.0096, "s0.loss_cls": 0.05629, "s0.loss_bbox": 0.02799, "s1.loss_cls": 0.04382, "s1.loss_bbox": 0.06152, "s2.loss_cls": 0.02949, "s2.loss_bbox": 0.06956, "loss": 0.31165, "time": 1.0424}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 3e-05, "memory": 19635, "data_time": 0.00427, "loss_rpn_cls": 0.01275, "loss_rpn_bbox": 0.00983, "s0.loss_cls": 0.04457, "s0.loss_bbox": 0.02333, "s1.loss_cls": 0.03931, "s1.loss_bbox": 0.05668, "s2.loss_cls": 0.0255, "s2.loss_bbox": 0.06559, "loss": 0.27757, "time": 1.04878}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 3e-05, "memory": 19635, "data_time": 0.00445, "loss_rpn_cls": 0.01236, "loss_rpn_bbox": 0.01122, "s0.loss_cls": 0.04353, "s0.loss_bbox": 0.02223, "s1.loss_cls": 0.03913, "s1.loss_bbox": 0.05602, "s2.loss_cls": 0.02633, "s2.loss_bbox": 0.064, "loss": 0.27483, "time": 1.05319}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 3e-05, "memory": 19635, "data_time": 0.00434, "loss_rpn_cls": 0.0187, "loss_rpn_bbox": 0.0117, "s0.loss_cls": 0.0526, "s0.loss_bbox": 0.02804, "s1.loss_cls": 0.04471, "s1.loss_bbox": 0.06375, "s2.loss_cls": 0.03061, "s2.loss_bbox": 0.06936, "loss": 0.31946, "time": 1.05713}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 3e-05, "memory": 19635, "data_time": 0.00515, "loss_rpn_cls": 0.01647, "loss_rpn_bbox": 0.01313, "s0.loss_cls": 0.0603, "s0.loss_bbox": 0.02826, "s1.loss_cls": 0.0475, "s1.loss_bbox": 0.06036, "s2.loss_cls": 0.03125, "s2.loss_bbox": 0.06579, "loss": 0.32307, "time": 1.05444}
{"mode": "train", "epoch": 2, "iter": 1550, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.01502, "loss_rpn_bbox": 0.00943, "s0.loss_cls": 0.05854, "s0.loss_bbox": 0.02726, "s1.loss_cls": 0.04693, "s1.loss_bbox": 0.06367, "s2.loss_cls": 0.03117, "s2.loss_bbox": 0.07493, "loss": 0.32694, "time": 1.04174}
{"mode": "train", "epoch": 2, "iter": 1600, "lr": 3e-05, "memory": 19635, "data_time": 0.004, "loss_rpn_cls": 0.01636, "loss_rpn_bbox": 0.0122, "s0.loss_cls": 0.05897, "s0.loss_bbox": 0.02942, "s1.loss_cls": 0.04738, "s1.loss_bbox": 0.06494, "s2.loss_cls": 0.03328, "s2.loss_bbox": 0.06978, "loss": 0.33232, "time": 1.06649}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 3e-05, "memory": 19635, "data_time": 0.06141, "loss_rpn_cls": 0.01382, "loss_rpn_bbox": 0.01212, "s0.loss_cls": 0.05312, "s0.loss_bbox": 0.02619, "s1.loss_cls": 0.04314, "s1.loss_bbox": 0.06001, "s2.loss_cls": 0.02716, "s2.loss_bbox": 0.06722, "loss": 0.30277, "time": 1.10492}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 3e-05, "memory": 19635, "data_time": 0.00465, "loss_rpn_cls": 0.01372, "loss_rpn_bbox": 0.00923, "s0.loss_cls": 0.04362, "s0.loss_bbox": 0.02133, "s1.loss_cls": 0.03983, "s1.loss_bbox": 0.05824, "s2.loss_cls": 0.02779, "s2.loss_bbox": 0.06753, "loss": 0.28128, "time": 1.05024}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 3e-05, "memory": 19635, "data_time": 0.00478, "loss_rpn_cls": 0.01371, "loss_rpn_bbox": 0.00892, "s0.loss_cls": 0.04941, "s0.loss_bbox": 0.02566, "s1.loss_cls": 0.041, "s1.loss_bbox": 0.06288, "s2.loss_cls": 0.02773, "s2.loss_bbox": 0.07555, "loss": 0.30487, "time": 1.03458}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 3e-05, "memory": 19635, "data_time": 0.00432, "loss_rpn_cls": 0.01256, "loss_rpn_bbox": 0.00971, "s0.loss_cls": 0.05499, "s0.loss_bbox": 0.02776, "s1.loss_cls": 0.03631, "s1.loss_bbox": 0.05697, "s2.loss_cls": 0.02356, "s2.loss_bbox": 0.06221, "loss": 0.28408, "time": 1.03527}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 3e-05, "memory": 19635, "data_time": 0.00417, "loss_rpn_cls": 0.01196, "loss_rpn_bbox": 0.00906, "s0.loss_cls": 0.04929, "s0.loss_bbox": 0.02465, "s1.loss_cls": 0.04039, "s1.loss_bbox": 0.05598, "s2.loss_cls": 0.02872, "s2.loss_bbox": 0.06441, "loss": 0.28446, "time": 1.07489}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 3e-05, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.01038, "loss_rpn_bbox": 0.00985, "s0.loss_cls": 0.0451, "s0.loss_bbox": 0.02741, "s1.loss_cls": 0.04067, "s1.loss_bbox": 0.06393, "s2.loss_cls": 0.02947, "s2.loss_bbox": 0.07279, "loss": 0.29961, "time": 1.06371}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 3e-05, "memory": 19635, "data_time": 0.00418, "loss_rpn_cls": 0.01124, "loss_rpn_bbox": 0.00926, "s0.loss_cls": 0.05116, "s0.loss_bbox": 0.02733, "s1.loss_cls": 0.04137, "s1.loss_bbox": 0.06347, "s2.loss_cls": 0.02881, "s2.loss_bbox": 0.07024, "loss": 0.30288, "time": 1.03592}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 3e-05, "memory": 19635, "data_time": 0.00451, "loss_rpn_cls": 0.01225, "loss_rpn_bbox": 0.00964, "s0.loss_cls": 0.06043, "s0.loss_bbox": 0.03112, "s1.loss_cls": 0.04559, "s1.loss_bbox": 0.06448, "s2.loss_cls": 0.02813, "s2.loss_bbox": 0.06973, "loss": 0.32136, "time": 1.05389}
{"mode": "train", "epoch": 3, "iter": 450, "lr": 3e-05, "memory": 19635, "data_time": 0.00431, "loss_rpn_cls": 0.01161, "loss_rpn_bbox": 0.00878, "s0.loss_cls": 0.04624, "s0.loss_bbox": 0.02366, "s1.loss_cls": 0.03992, "s1.loss_bbox": 0.06134, "s2.loss_cls": 0.02647, "s2.loss_bbox": 0.07406, "loss": 0.29209, "time": 1.04816}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 3e-05, "memory": 19635, "data_time": 0.00457, "loss_rpn_cls": 0.01382, "loss_rpn_bbox": 0.00958, "s0.loss_cls": 0.05491, "s0.loss_bbox": 0.02704, "s1.loss_cls": 0.04298, "s1.loss_bbox": 0.06021, "s2.loss_cls": 0.02856, "s2.loss_bbox": 0.06635, "loss": 0.30346, "time": 1.05333}
{"mode": "train", "epoch": 3, "iter": 550, "lr": 3e-05, "memory": 19635, "data_time": 0.004, "loss_rpn_cls": 0.01171, "loss_rpn_bbox": 0.0079, "s0.loss_cls": 0.05081, "s0.loss_bbox": 0.02626, "s1.loss_cls": 0.04045, "s1.loss_bbox": 0.05832, "s2.loss_cls": 0.02628, "s2.loss_bbox": 0.06736, "loss": 0.28909, "time": 1.05221}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 3e-05, "memory": 19635, "data_time": 0.00408, "loss_rpn_cls": 0.01147, "loss_rpn_bbox": 0.00838, "s0.loss_cls": 0.04755, "s0.loss_bbox": 0.02509, "s1.loss_cls": 0.04037, "s1.loss_bbox": 0.0619, "s2.loss_cls": 0.02555, "s2.loss_bbox": 0.07104, "loss": 0.29135, "time": 1.04506}
{"mode": "train", "epoch": 3, "iter": 650, "lr": 3e-05, "memory": 19635, "data_time": 0.0043, "loss_rpn_cls": 0.00979, "loss_rpn_bbox": 0.00813, "s0.loss_cls": 0.04816, "s0.loss_bbox": 0.02402, "s1.loss_cls": 0.0405, "s1.loss_bbox": 0.05924, "s2.loss_cls": 0.02604, "s2.loss_bbox": 0.07003, "loss": 0.2859, "time": 1.06843}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 3e-05, "memory": 19635, "data_time": 0.00434, "loss_rpn_cls": 0.01339, "loss_rpn_bbox": 0.01032, "s0.loss_cls": 0.05812, "s0.loss_bbox": 0.03032, "s1.loss_cls": 0.04399, "s1.loss_bbox": 0.06472, "s2.loss_cls": 0.02825, "s2.loss_bbox": 0.069, "loss": 0.3181, "time": 1.03101}
{"mode": "train", "epoch": 3, "iter": 750, "lr": 3e-05, "memory": 19635, "data_time": 0.00403, "loss_rpn_cls": 0.01453, "loss_rpn_bbox": 0.01115, "s0.loss_cls": 0.05735, "s0.loss_bbox": 0.03089, "s1.loss_cls": 0.04336, "s1.loss_bbox": 0.06339, "s2.loss_cls": 0.02876, "s2.loss_bbox": 0.067, "loss": 0.31642, "time": 1.05355}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 3e-05, "memory": 19635, "data_time": 0.00415, "loss_rpn_cls": 0.0132, "loss_rpn_bbox": 0.00867, "s0.loss_cls": 0.04321, "s0.loss_bbox": 0.02051, "s1.loss_cls": 0.03539, "s1.loss_bbox": 0.05131, "s2.loss_cls": 0.02328, "s2.loss_bbox": 0.05735, "loss": 0.25291, "time": 1.04686}
{"mode": "train", "epoch": 3, "iter": 850, "lr": 3e-05, "memory": 19635, "data_time": 0.00423, "loss_rpn_cls": 0.0122, "loss_rpn_bbox": 0.01066, "s0.loss_cls": 0.04783, "s0.loss_bbox": 0.02435, "s1.loss_cls": 0.03751, "s1.loss_bbox": 0.05516, "s2.loss_cls": 0.02323, "s2.loss_bbox": 0.05965, "loss": 0.27059, "time": 1.05081}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 3e-05, "memory": 19635, "data_time": 0.00448, "loss_rpn_cls": 0.01546, "loss_rpn_bbox": 0.01264, "s0.loss_cls": 0.05354, "s0.loss_bbox": 0.02796, "s1.loss_cls": 0.03656, "s1.loss_bbox": 0.05796, "s2.loss_cls": 0.02246, "s2.loss_bbox": 0.05958, "loss": 0.28616, "time": 1.05761}
{"mode": "train", "epoch": 3, "iter": 950, "lr": 3e-05, "memory": 19635, "data_time": 0.00465, "loss_rpn_cls": 0.01686, "loss_rpn_bbox": 0.01078, "s0.loss_cls": 0.05073, "s0.loss_bbox": 0.02528, "s1.loss_cls": 0.03941, "s1.loss_bbox": 0.05676, "s2.loss_cls": 0.02347, "s2.loss_bbox": 0.06396, "loss": 0.28725, "time": 1.06517}
{"mode": "train", "epoch": 3, "iter": 1000, "lr": 3e-05, "memory": 19635, "data_time": 0.00415, "loss_rpn_cls": 0.01401, "loss_rpn_bbox": 0.01048, "s0.loss_cls": 0.05294, "s0.loss_bbox": 0.02662, "s1.loss_cls": 0.03858, "s1.loss_bbox": 0.05357, "s2.loss_cls": 0.0224, "s2.loss_bbox": 0.05523, "loss": 0.27381, "time": 1.048}
{"mode": "train", "epoch": 3, "iter": 1050, "lr": 3e-05, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.01407, "loss_rpn_bbox": 0.00833, "s0.loss_cls": 0.05215, "s0.loss_bbox": 0.02768, "s1.loss_cls": 0.03974, "s1.loss_bbox": 0.06178, "s2.loss_cls": 0.02555, "s2.loss_bbox": 0.06417, "loss": 0.29347, "time": 1.04605}
{"mode": "train", "epoch": 3, "iter": 1100, "lr": 3e-05, "memory": 19635, "data_time": 0.00423, "loss_rpn_cls": 0.01281, "loss_rpn_bbox": 0.0083, "s0.loss_cls": 0.05027, "s0.loss_bbox": 0.02517, "s1.loss_cls": 0.03815, "s1.loss_bbox": 0.05766, "s2.loss_cls": 0.02265, "s2.loss_bbox": 0.06253, "loss": 0.27754, "time": 1.02863}
{"mode": "train", "epoch": 3, "iter": 1150, "lr": 3e-05, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.0161, "loss_rpn_bbox": 0.01133, "s0.loss_cls": 0.04393, "s0.loss_bbox": 0.02334, "s1.loss_cls": 0.03679, "s1.loss_bbox": 0.05889, "s2.loss_cls": 0.02567, "s2.loss_bbox": 0.06636, "loss": 0.28241, "time": 1.05144}
{"mode": "train", "epoch": 3, "iter": 1200, "lr": 3e-05, "memory": 19635, "data_time": 0.00417, "loss_rpn_cls": 0.01175, "loss_rpn_bbox": 0.00913, "s0.loss_cls": 0.05525, "s0.loss_bbox": 0.0269, "s1.loss_cls": 0.03729, "s1.loss_bbox": 0.05455, "s2.loss_cls": 0.0234, "s2.loss_bbox": 0.06022, "loss": 0.27847, "time": 1.06193}
{"mode": "train", "epoch": 3, "iter": 1250, "lr": 3e-05, "memory": 19635, "data_time": 0.00421, "loss_rpn_cls": 0.01072, "loss_rpn_bbox": 0.00899, "s0.loss_cls": 0.0412, "s0.loss_bbox": 0.0201, "s1.loss_cls": 0.03537, "s1.loss_bbox": 0.05095, "s2.loss_cls": 0.02255, "s2.loss_bbox": 0.06124, "loss": 0.25111, "time": 1.06462}
{"mode": "train", "epoch": 3, "iter": 1300, "lr": 3e-05, "memory": 19635, "data_time": 0.00431, "loss_rpn_cls": 0.01192, "loss_rpn_bbox": 0.00951, "s0.loss_cls": 0.05514, "s0.loss_bbox": 0.02607, "s1.loss_cls": 0.03835, "s1.loss_bbox": 0.05554, "s2.loss_cls": 0.02407, "s2.loss_bbox": 0.05787, "loss": 0.27849, "time": 1.05669}
{"mode": "train", "epoch": 3, "iter": 1350, "lr": 3e-05, "memory": 19635, "data_time": 0.00424, "loss_rpn_cls": 0.01161, "loss_rpn_bbox": 0.01017, "s0.loss_cls": 0.04949, "s0.loss_bbox": 0.02478, "s1.loss_cls": 0.03841, "s1.loss_bbox": 0.05817, "s2.loss_cls": 0.02516, "s2.loss_bbox": 0.06088, "loss": 0.27867, "time": 1.04065}
{"mode": "train", "epoch": 3, "iter": 1400, "lr": 3e-05, "memory": 19635, "data_time": 0.00441, "loss_rpn_cls": 0.01268, "loss_rpn_bbox": 0.00806, "s0.loss_cls": 0.04653, "s0.loss_bbox": 0.02491, "s1.loss_cls": 0.03829, "s1.loss_bbox": 0.06161, "s2.loss_cls": 0.0231, "s2.loss_bbox": 0.06884, "loss": 0.28402, "time": 1.04206}
{"mode": "train", "epoch": 3, "iter": 1450, "lr": 3e-05, "memory": 19635, "data_time": 0.00399, "loss_rpn_cls": 0.0126, "loss_rpn_bbox": 0.00966, "s0.loss_cls": 0.05665, "s0.loss_bbox": 0.02926, "s1.loss_cls": 0.03903, "s1.loss_bbox": 0.06342, "s2.loss_cls": 0.02386, "s2.loss_bbox": 0.06265, "loss": 0.2971, "time": 1.05684}
{"mode": "train", "epoch": 3, "iter": 1500, "lr": 3e-05, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.012, "loss_rpn_bbox": 0.00842, "s0.loss_cls": 0.04857, "s0.loss_bbox": 0.02508, "s1.loss_cls": 0.03742, "s1.loss_bbox": 0.06228, "s2.loss_cls": 0.02293, "s2.loss_bbox": 0.06738, "loss": 0.28408, "time": 1.06573}
{"mode": "train", "epoch": 3, "iter": 1550, "lr": 3e-05, "memory": 19635, "data_time": 0.00405, "loss_rpn_cls": 0.01045, "loss_rpn_bbox": 0.0084, "s0.loss_cls": 0.05302, "s0.loss_bbox": 0.0238, "s1.loss_cls": 0.04343, "s1.loss_bbox": 0.06549, "s2.loss_cls": 0.02716, "s2.loss_bbox": 0.07213, "loss": 0.30389, "time": 1.05222}
{"mode": "train", "epoch": 3, "iter": 1600, "lr": 3e-05, "memory": 19635, "data_time": 0.0045, "loss_rpn_cls": 0.01206, "loss_rpn_bbox": 0.00868, "s0.loss_cls": 0.0519, "s0.loss_bbox": 0.0255, "s1.loss_cls": 0.04056, "s1.loss_bbox": 0.05724, "s2.loss_cls": 0.02748, "s2.loss_bbox": 0.06305, "loss": 0.28646, "time": 1.03655}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 3e-05, "memory": 19635, "data_time": 0.06509, "loss_rpn_cls": 0.01183, "loss_rpn_bbox": 0.00817, "s0.loss_cls": 0.04295, "s0.loss_bbox": 0.02102, "s1.loss_cls": 0.03675, "s1.loss_bbox": 0.0508, "s2.loss_cls": 0.02541, "s2.loss_bbox": 0.06046, "loss": 0.25739, "time": 1.11862}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 3e-05, "memory": 19635, "data_time": 0.00438, "loss_rpn_cls": 0.00984, "loss_rpn_bbox": 0.00848, "s0.loss_cls": 0.04573, "s0.loss_bbox": 0.02237, "s1.loss_cls": 0.03617, "s1.loss_bbox": 0.05457, "s2.loss_cls": 0.02281, "s2.loss_bbox": 0.06184, "loss": 0.26181, "time": 1.06902}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 3e-05, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.01248, "loss_rpn_bbox": 0.00916, "s0.loss_cls": 0.05133, "s0.loss_bbox": 0.02634, "s1.loss_cls": 0.0337, "s1.loss_bbox": 0.05258, "s2.loss_cls": 0.02104, "s2.loss_bbox": 0.05735, "loss": 0.26398, "time": 1.05464}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 3e-05, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.0107, "loss_rpn_bbox": 0.00846, "s0.loss_cls": 0.04066, "s0.loss_bbox": 0.01949, "s1.loss_cls": 0.03404, "s1.loss_bbox": 0.05131, "s2.loss_cls": 0.02248, "s2.loss_bbox": 0.05946, "loss": 0.24659, "time": 1.05969}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 3e-05, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.01099, "loss_rpn_bbox": 0.0084, "s0.loss_cls": 0.04292, "s0.loss_bbox": 0.02074, "s1.loss_cls": 0.03423, "s1.loss_bbox": 0.05277, "s2.loss_cls": 0.0209, "s2.loss_bbox": 0.05693, "loss": 0.24787, "time": 1.05549}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 3e-05, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.01114, "loss_rpn_bbox": 0.00867, "s0.loss_cls": 0.04621, "s0.loss_bbox": 0.02444, "s1.loss_cls": 0.03553, "s1.loss_bbox": 0.05376, "s2.loss_cls": 0.02276, "s2.loss_bbox": 0.06027, "loss": 0.26278, "time": 1.04728}
{"mode": "train", "epoch": 4, "iter": 350, "lr": 3e-05, "memory": 19635, "data_time": 0.00448, "loss_rpn_cls": 0.01015, "loss_rpn_bbox": 0.00743, "s0.loss_cls": 0.04792, "s0.loss_bbox": 0.02523, "s1.loss_cls": 0.03477, "s1.loss_bbox": 0.05414, "s2.loss_cls": 0.02289, "s2.loss_bbox": 0.06078, "loss": 0.26331, "time": 1.05241}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 3e-05, "memory": 19635, "data_time": 0.00444, "loss_rpn_cls": 0.01133, "loss_rpn_bbox": 0.00701, "s0.loss_cls": 0.04196, "s0.loss_bbox": 0.02195, "s1.loss_cls": 0.02887, "s1.loss_bbox": 0.04729, "s2.loss_cls": 0.01723, "s2.loss_bbox": 0.05158, "loss": 0.22721, "time": 1.05067}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 3e-05, "memory": 19635, "data_time": 0.00402, "loss_rpn_cls": 0.01018, "loss_rpn_bbox": 0.00834, "s0.loss_cls": 0.04149, "s0.loss_bbox": 0.02381, "s1.loss_cls": 0.02871, "s1.loss_bbox": 0.04776, "s2.loss_cls": 0.01969, "s2.loss_bbox": 0.04869, "loss": 0.22868, "time": 1.04763}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 3e-05, "memory": 19635, "data_time": 0.00483, "loss_rpn_cls": 0.01354, "loss_rpn_bbox": 0.00909, "s0.loss_cls": 0.0501, "s0.loss_bbox": 0.02807, "s1.loss_cls": 0.03428, "s1.loss_bbox": 0.05458, "s2.loss_cls": 0.02145, "s2.loss_bbox": 0.05813, "loss": 0.26926, "time": 1.05334}
{"mode": "train", "epoch": 4, "iter": 550, "lr": 3e-05, "memory": 19635, "data_time": 0.00441, "loss_rpn_cls": 0.01296, "loss_rpn_bbox": 0.01044, "s0.loss_cls": 0.04499, "s0.loss_bbox": 0.02338, "s1.loss_cls": 0.03499, "s1.loss_bbox": 0.05611, "s2.loss_cls": 0.02221, "s2.loss_bbox": 0.06019, "loss": 0.26528, "time": 1.05418}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 3e-05, "memory": 19635, "data_time": 0.00427, "loss_rpn_cls": 0.00991, "loss_rpn_bbox": 0.00861, "s0.loss_cls": 0.04508, "s0.loss_bbox": 0.02354, "s1.loss_cls": 0.03412, "s1.loss_bbox": 0.05306, "s2.loss_cls": 0.02253, "s2.loss_bbox": 0.05516, "loss": 0.25202, "time": 1.04112}
{"mode": "train", "epoch": 4, "iter": 650, "lr": 3e-05, "memory": 19635, "data_time": 0.00407, "loss_rpn_cls": 0.00883, "loss_rpn_bbox": 0.0066, "s0.loss_cls": 0.04417, "s0.loss_bbox": 0.02246, "s1.loss_cls": 0.03421, "s1.loss_bbox": 0.0535, "s2.loss_cls": 0.02293, "s2.loss_bbox": 0.05875, "loss": 0.25145, "time": 1.05452}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 3e-05, "memory": 19635, "data_time": 0.00421, "loss_rpn_cls": 0.01176, "loss_rpn_bbox": 0.00871, "s0.loss_cls": 0.04293, "s0.loss_bbox": 0.02328, "s1.loss_cls": 0.03257, "s1.loss_bbox": 0.05449, "s2.loss_cls": 0.02166, "s2.loss_bbox": 0.0613, "loss": 0.25668, "time": 1.04677}
{"mode": "train", "epoch": 4, "iter": 750, "lr": 3e-05, "memory": 19635, "data_time": 0.00386, "loss_rpn_cls": 0.00998, "loss_rpn_bbox": 0.00807, "s0.loss_cls": 0.04705, "s0.loss_bbox": 0.02465, "s1.loss_cls": 0.03518, "s1.loss_bbox": 0.05317, "s2.loss_cls": 0.02296, "s2.loss_bbox": 0.056, "loss": 0.25705, "time": 1.05285}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 3e-05, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.00837, "loss_rpn_bbox": 0.00671, "s0.loss_cls": 0.04821, "s0.loss_bbox": 0.02392, "s1.loss_cls": 0.03376, "s1.loss_bbox": 0.05232, "s2.loss_cls": 0.02037, "s2.loss_bbox": 0.05177, "loss": 0.24544, "time": 1.04827}
{"mode": "train", "epoch": 4, "iter": 850, "lr": 3e-05, "memory": 19635, "data_time": 0.00445, "loss_rpn_cls": 0.00937, "loss_rpn_bbox": 0.00643, "s0.loss_cls": 0.03863, "s0.loss_bbox": 0.01894, "s1.loss_cls": 0.03203, "s1.loss_bbox": 0.04943, "s2.loss_cls": 0.01906, "s2.loss_bbox": 0.05913, "loss": 0.23301, "time": 1.06296}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 3e-05, "memory": 19635, "data_time": 0.00397, "loss_rpn_cls": 0.01186, "loss_rpn_bbox": 0.00911, "s0.loss_cls": 0.05554, "s0.loss_bbox": 0.02952, "s1.loss_cls": 0.03862, "s1.loss_bbox": 0.0587, "s2.loss_cls": 0.02432, "s2.loss_bbox": 0.06249, "loss": 0.29017, "time": 1.0606}
{"mode": "train", "epoch": 4, "iter": 950, "lr": 3e-05, "memory": 19635, "data_time": 0.00434, "loss_rpn_cls": 0.00825, "loss_rpn_bbox": 0.00813, "s0.loss_cls": 0.04593, "s0.loss_bbox": 0.02367, "s1.loss_cls": 0.03404, "s1.loss_bbox": 0.05669, "s2.loss_cls": 0.02167, "s2.loss_bbox": 0.06024, "loss": 0.25861, "time": 1.07869}
{"mode": "train", "epoch": 4, "iter": 1000, "lr": 3e-05, "memory": 19635, "data_time": 0.00438, "loss_rpn_cls": 0.00961, "loss_rpn_bbox": 0.00806, "s0.loss_cls": 0.04067, "s0.loss_bbox": 0.01913, "s1.loss_cls": 0.03037, "s1.loss_bbox": 0.04748, "s2.loss_cls": 0.01886, "s2.loss_bbox": 0.05445, "loss": 0.22864, "time": 1.06232}
{"mode": "train", "epoch": 4, "iter": 1050, "lr": 3e-05, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.01042, "loss_rpn_bbox": 0.00776, "s0.loss_cls": 0.04641, "s0.loss_bbox": 0.02273, "s1.loss_cls": 0.03532, "s1.loss_bbox": 0.0483, "s2.loss_cls": 0.02194, "s2.loss_bbox": 0.05422, "loss": 0.24709, "time": 1.05619}
{"mode": "train", "epoch": 4, "iter": 1100, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.01643, "loss_rpn_bbox": 0.00929, "s0.loss_cls": 0.05245, "s0.loss_bbox": 0.02643, "s1.loss_cls": 0.0347, "s1.loss_bbox": 0.05365, "s2.loss_cls": 0.02073, "s2.loss_bbox": 0.05734, "loss": 0.27103, "time": 1.04714}
{"mode": "train", "epoch": 4, "iter": 1150, "lr": 3e-05, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.01086, "loss_rpn_bbox": 0.00913, "s0.loss_cls": 0.05855, "s0.loss_bbox": 0.02681, "s1.loss_cls": 0.03907, "s1.loss_bbox": 0.05799, "s2.loss_cls": 0.02392, "s2.loss_bbox": 0.0609, "loss": 0.28724, "time": 1.04567}
{"mode": "train", "epoch": 4, "iter": 1200, "lr": 3e-05, "memory": 19635, "data_time": 0.00434, "loss_rpn_cls": 0.01003, "loss_rpn_bbox": 0.00943, "s0.loss_cls": 0.06086, "s0.loss_bbox": 0.02974, "s1.loss_cls": 0.0362, "s1.loss_bbox": 0.05843, "s2.loss_cls": 0.02081, "s2.loss_bbox": 0.06101, "loss": 0.28651, "time": 1.05398}
{"mode": "train", "epoch": 4, "iter": 1250, "lr": 3e-05, "memory": 19635, "data_time": 0.00399, "loss_rpn_cls": 0.01119, "loss_rpn_bbox": 0.00663, "s0.loss_cls": 0.05329, "s0.loss_bbox": 0.0248, "s1.loss_cls": 0.03404, "s1.loss_bbox": 0.04969, "s2.loss_cls": 0.02008, "s2.loss_bbox": 0.05248, "loss": 0.2522, "time": 1.04639}
{"mode": "train", "epoch": 4, "iter": 1300, "lr": 3e-05, "memory": 19635, "data_time": 0.00407, "loss_rpn_cls": 0.011, "loss_rpn_bbox": 0.00996, "s0.loss_cls": 0.05038, "s0.loss_bbox": 0.02494, "s1.loss_cls": 0.03154, "s1.loss_bbox": 0.04795, "s2.loss_cls": 0.01973, "s2.loss_bbox": 0.04503, "loss": 0.24055, "time": 1.03449}
{"mode": "train", "epoch": 4, "iter": 1350, "lr": 3e-05, "memory": 19635, "data_time": 0.00428, "loss_rpn_cls": 0.00919, "loss_rpn_bbox": 0.00841, "s0.loss_cls": 0.04226, "s0.loss_bbox": 0.02331, "s1.loss_cls": 0.02942, "s1.loss_bbox": 0.05156, "s2.loss_cls": 0.01777, "s2.loss_bbox": 0.05616, "loss": 0.2381, "time": 1.05205}
{"mode": "train", "epoch": 4, "iter": 1400, "lr": 3e-05, "memory": 19635, "data_time": 0.00409, "loss_rpn_cls": 0.01588, "loss_rpn_bbox": 0.00902, "s0.loss_cls": 0.05746, "s0.loss_bbox": 0.02726, "s1.loss_cls": 0.03777, "s1.loss_bbox": 0.05673, "s2.loss_cls": 0.02388, "s2.loss_bbox": 0.05525, "loss": 0.28325, "time": 1.05098}
{"mode": "train", "epoch": 4, "iter": 1450, "lr": 3e-05, "memory": 19635, "data_time": 0.00415, "loss_rpn_cls": 0.01261, "loss_rpn_bbox": 0.00999, "s0.loss_cls": 0.05194, "s0.loss_bbox": 0.02538, "s1.loss_cls": 0.03011, "s1.loss_bbox": 0.04712, "s2.loss_cls": 0.01752, "s2.loss_bbox": 0.04829, "loss": 0.24296, "time": 1.03459}
{"mode": "train", "epoch": 4, "iter": 1500, "lr": 3e-05, "memory": 19635, "data_time": 0.00423, "loss_rpn_cls": 0.0099, "loss_rpn_bbox": 0.00894, "s0.loss_cls": 0.05, "s0.loss_bbox": 0.0254, "s1.loss_cls": 0.03302, "s1.loss_bbox": 0.05083, "s2.loss_cls": 0.0198, "s2.loss_bbox": 0.05483, "loss": 0.25273, "time": 1.04319}
{"mode": "train", "epoch": 4, "iter": 1550, "lr": 3e-05, "memory": 19635, "data_time": 0.00459, "loss_rpn_cls": 0.01091, "loss_rpn_bbox": 0.0074, "s0.loss_cls": 0.05626, "s0.loss_bbox": 0.02588, "s1.loss_cls": 0.03224, "s1.loss_bbox": 0.04974, "s2.loss_cls": 0.01997, "s2.loss_bbox": 0.04781, "loss": 0.25021, "time": 1.05851}
{"mode": "train", "epoch": 4, "iter": 1600, "lr": 3e-05, "memory": 19635, "data_time": 0.00443, "loss_rpn_cls": 0.01215, "loss_rpn_bbox": 0.00922, "s0.loss_cls": 0.05263, "s0.loss_bbox": 0.02561, "s1.loss_cls": 0.03415, "s1.loss_bbox": 0.05177, "s2.loss_cls": 0.02053, "s2.loss_bbox": 0.05194, "loss": 0.25801, "time": 1.06183}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 3e-05, "memory": 19635, "data_time": 0.06221, "loss_rpn_cls": 0.01116, "loss_rpn_bbox": 0.01037, "s0.loss_cls": 0.05161, "s0.loss_bbox": 0.02571, "s1.loss_cls": 0.03165, "s1.loss_bbox": 0.04778, "s2.loss_cls": 0.01945, "s2.loss_bbox": 0.04548, "loss": 0.24322, "time": 1.11505}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 3e-05, "memory": 19635, "data_time": 0.00449, "loss_rpn_cls": 0.01353, "loss_rpn_bbox": 0.00793, "s0.loss_cls": 0.05698, "s0.loss_bbox": 0.02613, "s1.loss_cls": 0.03288, "s1.loss_bbox": 0.0466, "s2.loss_cls": 0.01702, "s2.loss_bbox": 0.0462, "loss": 0.24727, "time": 1.04809}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 3e-05, "memory": 19635, "data_time": 0.00418, "loss_rpn_cls": 0.01079, "loss_rpn_bbox": 0.00756, "s0.loss_cls": 0.048, "s0.loss_bbox": 0.02333, "s1.loss_cls": 0.0288, "s1.loss_bbox": 0.04595, "s2.loss_cls": 0.01536, "s2.loss_bbox": 0.04441, "loss": 0.2242, "time": 1.05717}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 3e-05, "memory": 19635, "data_time": 0.00404, "loss_rpn_cls": 0.01108, "loss_rpn_bbox": 0.00792, "s0.loss_cls": 0.04276, "s0.loss_bbox": 0.02204, "s1.loss_cls": 0.02625, "s1.loss_bbox": 0.04273, "s2.loss_cls": 0.0158, "s2.loss_bbox": 0.0462, "loss": 0.21478, "time": 1.06387}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 3e-05, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.0113, "loss_rpn_bbox": 0.00733, "s0.loss_cls": 0.0475, "s0.loss_bbox": 0.02318, "s1.loss_cls": 0.02737, "s1.loss_bbox": 0.03911, "s2.loss_cls": 0.01479, "s2.loss_bbox": 0.03816, "loss": 0.20874, "time": 1.04411}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 3e-05, "memory": 19635, "data_time": 0.00417, "loss_rpn_cls": 0.01033, "loss_rpn_bbox": 0.00841, "s0.loss_cls": 0.05112, "s0.loss_bbox": 0.02594, "s1.loss_cls": 0.03208, "s1.loss_bbox": 0.05243, "s2.loss_cls": 0.01874, "s2.loss_bbox": 0.05346, "loss": 0.25252, "time": 1.02132}
{"mode": "train", "epoch": 5, "iter": 350, "lr": 3e-05, "memory": 19635, "data_time": 0.00445, "loss_rpn_cls": 0.01112, "loss_rpn_bbox": 0.00982, "s0.loss_cls": 0.04516, "s0.loss_bbox": 0.0208, "s1.loss_cls": 0.02843, "s1.loss_bbox": 0.04185, "s2.loss_cls": 0.01543, "s2.loss_bbox": 0.04236, "loss": 0.21498, "time": 1.02823}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 3e-05, "memory": 19635, "data_time": 0.00418, "loss_rpn_cls": 0.0091, "loss_rpn_bbox": 0.00722, "s0.loss_cls": 0.04613, "s0.loss_bbox": 0.02368, "s1.loss_cls": 0.02981, "s1.loss_bbox": 0.05189, "s2.loss_cls": 0.01772, "s2.loss_bbox": 0.05096, "loss": 0.2365, "time": 1.06605}
{"mode": "train", "epoch": 5, "iter": 450, "lr": 3e-05, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.00865, "loss_rpn_bbox": 0.00805, "s0.loss_cls": 0.04802, "s0.loss_bbox": 0.02626, "s1.loss_cls": 0.03344, "s1.loss_bbox": 0.06173, "s2.loss_cls": 0.01975, "s2.loss_bbox": 0.06563, "loss": 0.27152, "time": 1.03319}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 3e-05, "memory": 19635, "data_time": 0.00449, "loss_rpn_cls": 0.01025, "loss_rpn_bbox": 0.00765, "s0.loss_cls": 0.0427, "s0.loss_bbox": 0.01952, "s1.loss_cls": 0.02816, "s1.loss_bbox": 0.04746, "s2.loss_cls": 0.01753, "s2.loss_bbox": 0.05331, "loss": 0.22659, "time": 1.06771}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 3e-05, "memory": 19635, "data_time": 0.00515, "loss_rpn_cls": 0.0088, "loss_rpn_bbox": 0.00722, "s0.loss_cls": 0.03902, "s0.loss_bbox": 0.01989, "s1.loss_cls": 0.02632, "s1.loss_bbox": 0.04395, "s2.loss_cls": 0.01731, "s2.loss_bbox": 0.04444, "loss": 0.20695, "time": 1.06717}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 3e-05, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.00743, "loss_rpn_bbox": 0.00587, "s0.loss_cls": 0.04512, "s0.loss_bbox": 0.0216, "s1.loss_cls": 0.03112, "s1.loss_bbox": 0.04659, "s2.loss_cls": 0.01736, "s2.loss_bbox": 0.05105, "loss": 0.22613, "time": 1.03723}
{"mode": "train", "epoch": 5, "iter": 650, "lr": 3e-05, "memory": 19635, "data_time": 0.00428, "loss_rpn_cls": 0.00677, "loss_rpn_bbox": 0.00655, "s0.loss_cls": 0.04105, "s0.loss_bbox": 0.02109, "s1.loss_cls": 0.02666, "s1.loss_bbox": 0.04396, "s2.loss_cls": 0.0158, "s2.loss_bbox": 0.04621, "loss": 0.20809, "time": 1.05211}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 3e-05, "memory": 19635, "data_time": 0.0047, "loss_rpn_cls": 0.00902, "loss_rpn_bbox": 0.00725, "s0.loss_cls": 0.04082, "s0.loss_bbox": 0.02012, "s1.loss_cls": 0.02588, "s1.loss_bbox": 0.0453, "s2.loss_cls": 0.01733, "s2.loss_bbox": 0.04633, "loss": 0.21205, "time": 1.0693}
{"mode": "train", "epoch": 5, "iter": 750, "lr": 3e-05, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.00851, "loss_rpn_bbox": 0.00644, "s0.loss_cls": 0.04238, "s0.loss_bbox": 0.02256, "s1.loss_cls": 0.02664, "s1.loss_bbox": 0.04771, "s2.loss_cls": 0.01527, "s2.loss_bbox": 0.04638, "loss": 0.21589, "time": 1.04955}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 3e-05, "memory": 19635, "data_time": 0.00413, "loss_rpn_cls": 0.00896, "loss_rpn_bbox": 0.00651, "s0.loss_cls": 0.03959, "s0.loss_bbox": 0.0182, "s1.loss_cls": 0.02483, "s1.loss_bbox": 0.04113, "s2.loss_cls": 0.01446, "s2.loss_bbox": 0.04472, "loss": 0.1984, "time": 1.05045}
{"mode": "train", "epoch": 5, "iter": 850, "lr": 3e-05, "memory": 19635, "data_time": 0.00488, "loss_rpn_cls": 0.00802, "loss_rpn_bbox": 0.0071, "s0.loss_cls": 0.04119, "s0.loss_bbox": 0.02237, "s1.loss_cls": 0.02535, "s1.loss_bbox": 0.04445, "s2.loss_cls": 0.01367, "s2.loss_bbox": 0.04399, "loss": 0.20614, "time": 1.04041}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 3e-05, "memory": 19635, "data_time": 0.00441, "loss_rpn_cls": 0.01175, "loss_rpn_bbox": 0.00711, "s0.loss_cls": 0.05185, "s0.loss_bbox": 0.02525, "s1.loss_cls": 0.02988, "s1.loss_bbox": 0.051, "s2.loss_cls": 0.01689, "s2.loss_bbox": 0.05002, "loss": 0.24375, "time": 1.07922}
{"mode": "train", "epoch": 5, "iter": 950, "lr": 3e-05, "memory": 19635, "data_time": 0.00463, "loss_rpn_cls": 0.00922, "loss_rpn_bbox": 0.00758, "s0.loss_cls": 0.04191, "s0.loss_bbox": 0.02256, "s1.loss_cls": 0.02825, "s1.loss_bbox": 0.04824, "s2.loss_cls": 0.01647, "s2.loss_bbox": 0.04736, "loss": 0.22161, "time": 1.05092}
{"mode": "train", "epoch": 5, "iter": 1000, "lr": 3e-05, "memory": 19635, "data_time": 0.00473, "loss_rpn_cls": 0.01444, "loss_rpn_bbox": 0.0074, "s0.loss_cls": 0.05158, "s0.loss_bbox": 0.02367, "s1.loss_cls": 0.02953, "s1.loss_bbox": 0.04526, "s2.loss_cls": 0.01648, "s2.loss_bbox": 0.04198, "loss": 0.23035, "time": 1.06188}
{"mode": "train", "epoch": 5, "iter": 1050, "lr": 3e-05, "memory": 19635, "data_time": 0.00415, "loss_rpn_cls": 0.01077, "loss_rpn_bbox": 0.00751, "s0.loss_cls": 0.04329, "s0.loss_bbox": 0.01918, "s1.loss_cls": 0.02709, "s1.loss_bbox": 0.0416, "s2.loss_cls": 0.0155, "s2.loss_bbox": 0.04411, "loss": 0.20905, "time": 1.05593}
{"mode": "train", "epoch": 5, "iter": 1100, "lr": 3e-05, "memory": 19635, "data_time": 0.00458, "loss_rpn_cls": 0.008, "loss_rpn_bbox": 0.00752, "s0.loss_cls": 0.04065, "s0.loss_bbox": 0.02111, "s1.loss_cls": 0.02696, "s1.loss_bbox": 0.04739, "s2.loss_cls": 0.01699, "s2.loss_bbox": 0.05191, "loss": 0.22053, "time": 1.03221}
{"mode": "train", "epoch": 5, "iter": 1150, "lr": 3e-05, "memory": 19635, "data_time": 0.0046, "loss_rpn_cls": 0.00769, "loss_rpn_bbox": 0.00732, "s0.loss_cls": 0.04022, "s0.loss_bbox": 0.02041, "s1.loss_cls": 0.02479, "s1.loss_bbox": 0.04313, "s2.loss_cls": 0.01525, "s2.loss_bbox": 0.0451, "loss": 0.2039, "time": 1.03194}
{"mode": "train", "epoch": 5, "iter": 1200, "lr": 3e-05, "memory": 19635, "data_time": 0.00461, "loss_rpn_cls": 0.00997, "loss_rpn_bbox": 0.00727, "s0.loss_cls": 0.05056, "s0.loss_bbox": 0.02173, "s1.loss_cls": 0.033, "s1.loss_bbox": 0.04942, "s2.loss_cls": 0.01933, "s2.loss_bbox": 0.05053, "loss": 0.24181, "time": 1.01216}
{"mode": "train", "epoch": 5, "iter": 1250, "lr": 3e-05, "memory": 19635, "data_time": 0.00445, "loss_rpn_cls": 0.00803, "loss_rpn_bbox": 0.00669, "s0.loss_cls": 0.04147, "s0.loss_bbox": 0.02036, "s1.loss_cls": 0.02873, "s1.loss_bbox": 0.04904, "s2.loss_cls": 0.01838, "s2.loss_bbox": 0.05001, "loss": 0.22271, "time": 1.02673}
{"mode": "train", "epoch": 5, "iter": 1300, "lr": 3e-05, "memory": 19635, "data_time": 0.00472, "loss_rpn_cls": 0.0065, "loss_rpn_bbox": 0.00604, "s0.loss_cls": 0.03396, "s0.loss_bbox": 0.01628, "s1.loss_cls": 0.02429, "s1.loss_bbox": 0.0387, "s2.loss_cls": 0.01437, "s2.loss_bbox": 0.04425, "loss": 0.18441, "time": 1.01828}
{"mode": "train", "epoch": 5, "iter": 1350, "lr": 3e-05, "memory": 19635, "data_time": 0.00437, "loss_rpn_cls": 0.01046, "loss_rpn_bbox": 0.00939, "s0.loss_cls": 0.05971, "s0.loss_bbox": 0.02558, "s1.loss_cls": 0.04098, "s1.loss_bbox": 0.05197, "s2.loss_cls": 0.0241, "s2.loss_bbox": 0.05055, "loss": 0.27273, "time": 1.05576}
{"mode": "train", "epoch": 5, "iter": 1400, "lr": 3e-05, "memory": 19635, "data_time": 0.0044, "loss_rpn_cls": 0.00674, "loss_rpn_bbox": 0.00737, "s0.loss_cls": 0.04121, "s0.loss_bbox": 0.01886, "s1.loss_cls": 0.03123, "s1.loss_bbox": 0.04726, "s2.loss_cls": 0.01917, "s2.loss_bbox": 0.05312, "loss": 0.22495, "time": 1.03779}
{"mode": "train", "epoch": 5, "iter": 1450, "lr": 3e-05, "memory": 19635, "data_time": 0.00396, "loss_rpn_cls": 0.00884, "loss_rpn_bbox": 0.00761, "s0.loss_cls": 0.04406, "s0.loss_bbox": 0.02138, "s1.loss_cls": 0.0319, "s1.loss_bbox": 0.05102, "s2.loss_cls": 0.02008, "s2.loss_bbox": 0.05259, "loss": 0.23748, "time": 1.05752}
{"mode": "train", "epoch": 5, "iter": 1500, "lr": 3e-05, "memory": 19635, "data_time": 0.00408, "loss_rpn_cls": 0.00908, "loss_rpn_bbox": 0.007, "s0.loss_cls": 0.04216, "s0.loss_bbox": 0.02107, "s1.loss_cls": 0.02882, "s1.loss_bbox": 0.05045, "s2.loss_cls": 0.01833, "s2.loss_bbox": 0.05238, "loss": 0.2293, "time": 1.05524}
{"mode": "train", "epoch": 5, "iter": 1550, "lr": 3e-05, "memory": 19635, "data_time": 0.00403, "loss_rpn_cls": 0.00824, "loss_rpn_bbox": 0.00764, "s0.loss_cls": 0.05038, "s0.loss_bbox": 0.02423, "s1.loss_cls": 0.03359, "s1.loss_bbox": 0.05119, "s2.loss_cls": 0.02073, "s2.loss_bbox": 0.05122, "loss": 0.24721, "time": 1.05745}
{"mode": "train", "epoch": 5, "iter": 1600, "lr": 3e-05, "memory": 19635, "data_time": 0.00416, "loss_rpn_cls": 0.00728, "loss_rpn_bbox": 0.00723, "s0.loss_cls": 0.04368, "s0.loss_bbox": 0.02209, "s1.loss_cls": 0.02912, "s1.loss_bbox": 0.0454, "s2.loss_cls": 0.01778, "s2.loss_bbox": 0.04961, "loss": 0.22219, "time": 1.05662}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 3e-05, "memory": 19635, "data_time": 0.06541, "loss_rpn_cls": 0.00645, "loss_rpn_bbox": 0.00596, "s0.loss_cls": 0.03041, "s0.loss_bbox": 0.01468, "s1.loss_cls": 0.02287, "s1.loss_bbox": 0.03895, "s2.loss_cls": 0.01375, "s2.loss_bbox": 0.04555, "loss": 0.17863, "time": 1.12771}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 3e-05, "memory": 19635, "data_time": 0.00416, "loss_rpn_cls": 0.00686, "loss_rpn_bbox": 0.00741, "s0.loss_cls": 0.03722, "s0.loss_bbox": 0.0183, "s1.loss_cls": 0.02555, "s1.loss_bbox": 0.04443, "s2.loss_cls": 0.0156, "s2.loss_bbox": 0.04817, "loss": 0.20353, "time": 1.04549}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 3e-05, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.00865, "loss_rpn_bbox": 0.0076, "s0.loss_cls": 0.04734, "s0.loss_bbox": 0.02326, "s1.loss_cls": 0.02965, "s1.loss_bbox": 0.04782, "s2.loss_cls": 0.01866, "s2.loss_bbox": 0.04909, "loss": 0.23207, "time": 1.0572}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 3e-05, "memory": 19635, "data_time": 0.00406, "loss_rpn_cls": 0.00795, "loss_rpn_bbox": 0.00766, "s0.loss_cls": 0.04197, "s0.loss_bbox": 0.02011, "s1.loss_cls": 0.02947, "s1.loss_bbox": 0.04595, "s2.loss_cls": 0.01743, "s2.loss_bbox": 0.05059, "loss": 0.22111, "time": 1.05684}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 3e-05, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.00785, "loss_rpn_bbox": 0.00668, "s0.loss_cls": 0.05085, "s0.loss_bbox": 0.027, "s1.loss_cls": 0.03053, "s1.loss_bbox": 0.04964, "s2.loss_cls": 0.01775, "s2.loss_bbox": 0.04846, "loss": 0.23877, "time": 1.0583}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 3e-05, "memory": 19635, "data_time": 0.00439, "loss_rpn_cls": 0.00953, "loss_rpn_bbox": 0.00834, "s0.loss_cls": 0.05337, "s0.loss_bbox": 0.02265, "s1.loss_cls": 0.03037, "s1.loss_bbox": 0.04526, "s2.loss_cls": 0.01691, "s2.loss_bbox": 0.04672, "loss": 0.23315, "time": 1.05635}
{"mode": "train", "epoch": 6, "iter": 350, "lr": 3e-05, "memory": 19635, "data_time": 0.00391, "loss_rpn_cls": 0.00806, "loss_rpn_bbox": 0.00694, "s0.loss_cls": 0.04646, "s0.loss_bbox": 0.02296, "s1.loss_cls": 0.02803, "s1.loss_bbox": 0.04956, "s2.loss_cls": 0.01542, "s2.loss_bbox": 0.05254, "loss": 0.22998, "time": 1.05667}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 3e-05, "memory": 19635, "data_time": 0.0039, "loss_rpn_cls": 0.00766, "loss_rpn_bbox": 0.00618, "s0.loss_cls": 0.03856, "s0.loss_bbox": 0.02105, "s1.loss_cls": 0.02299, "s1.loss_bbox": 0.04283, "s2.loss_cls": 0.01381, "s2.loss_bbox": 0.04393, "loss": 0.19702, "time": 1.04893}
{"mode": "train", "epoch": 6, "iter": 450, "lr": 3e-05, "memory": 19635, "data_time": 0.0041, "loss_rpn_cls": 0.01089, "loss_rpn_bbox": 0.00636, "s0.loss_cls": 0.03856, "s0.loss_bbox": 0.02031, "s1.loss_cls": 0.02327, "s1.loss_bbox": 0.04308, "s2.loss_cls": 0.01322, "s2.loss_bbox": 0.04386, "loss": 0.19956, "time": 1.07003}
{"mode": "train", "epoch": 6, "iter": 500, "lr": 3e-05, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.00852, "loss_rpn_bbox": 0.00715, "s0.loss_cls": 0.05152, "s0.loss_bbox": 0.02326, "s1.loss_cls": 0.0319, "s1.loss_bbox": 0.0474, "s2.loss_cls": 0.01748, "s2.loss_bbox": 0.04574, "loss": 0.23297, "time": 1.05794}
{"mode": "train", "epoch": 6, "iter": 550, "lr": 3e-05, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.00878, "loss_rpn_bbox": 0.0054, "s0.loss_cls": 0.04122, "s0.loss_bbox": 0.01946, "s1.loss_cls": 0.02411, "s1.loss_bbox": 0.04206, "s2.loss_cls": 0.01317, "s2.loss_bbox": 0.04594, "loss": 0.20013, "time": 1.06525}
{"mode": "train", "epoch": 6, "iter": 600, "lr": 3e-05, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.00925, "loss_rpn_bbox": 0.00773, "s0.loss_cls": 0.0463, "s0.loss_bbox": 0.02317, "s1.loss_cls": 0.02603, "s1.loss_bbox": 0.04493, "s2.loss_cls": 0.01499, "s2.loss_bbox": 0.04605, "loss": 0.21846, "time": 1.06115}
{"mode": "train", "epoch": 6, "iter": 650, "lr": 3e-05, "memory": 19635, "data_time": 0.00445, "loss_rpn_cls": 0.01177, "loss_rpn_bbox": 0.00777, "s0.loss_cls": 0.05583, "s0.loss_bbox": 0.02441, "s1.loss_cls": 0.02981, "s1.loss_bbox": 0.04681, "s2.loss_cls": 0.01613, "s2.loss_bbox": 0.0461, "loss": 0.23863, "time": 1.07275}
{"mode": "train", "epoch": 6, "iter": 700, "lr": 3e-05, "memory": 19635, "data_time": 0.00415, "loss_rpn_cls": 0.00761, "loss_rpn_bbox": 0.00645, "s0.loss_cls": 0.04455, "s0.loss_bbox": 0.02042, "s1.loss_cls": 0.02814, "s1.loss_bbox": 0.0436, "s2.loss_cls": 0.01552, "s2.loss_bbox": 0.04306, "loss": 0.20935, "time": 1.04514}
{"mode": "train", "epoch": 6, "iter": 750, "lr": 3e-05, "memory": 19635, "data_time": 0.00444, "loss_rpn_cls": 0.00689, "loss_rpn_bbox": 0.0073, "s0.loss_cls": 0.03866, "s0.loss_bbox": 0.01871, "s1.loss_cls": 0.02394, "s1.loss_bbox": 0.04231, "s2.loss_cls": 0.01499, "s2.loss_bbox": 0.04432, "loss": 0.19712, "time": 1.05168}
{"mode": "train", "epoch": 6, "iter": 800, "lr": 3e-05, "memory": 19635, "data_time": 0.00427, "loss_rpn_cls": 0.00778, "loss_rpn_bbox": 0.00861, "s0.loss_cls": 0.04213, "s0.loss_bbox": 0.02209, "s1.loss_cls": 0.02547, "s1.loss_bbox": 0.04934, "s2.loss_cls": 0.01611, "s2.loss_bbox": 0.05007, "loss": 0.2216, "time": 1.04092}
{"mode": "train", "epoch": 6, "iter": 850, "lr": 3e-05, "memory": 19635, "data_time": 0.004, "loss_rpn_cls": 0.00859, "loss_rpn_bbox": 0.00708, "s0.loss_cls": 0.03983, "s0.loss_bbox": 0.0196, "s1.loss_cls": 0.02663, "s1.loss_bbox": 0.04315, "s2.loss_cls": 0.01504, "s2.loss_bbox": 0.04516, "loss": 0.20507, "time": 1.05023}
{"mode": "train", "epoch": 6, "iter": 900, "lr": 3e-05, "memory": 19635, "data_time": 0.00412, "loss_rpn_cls": 0.00864, "loss_rpn_bbox": 0.007, "s0.loss_cls": 0.04668, "s0.loss_bbox": 0.02449, "s1.loss_cls": 0.03095, "s1.loss_bbox": 0.05241, "s2.loss_cls": 0.01872, "s2.loss_bbox": 0.0517, "loss": 0.24059, "time": 1.05861}
{"mode": "train", "epoch": 6, "iter": 950, "lr": 3e-05, "memory": 19635, "data_time": 0.00398, "loss_rpn_cls": 0.00711, "loss_rpn_bbox": 0.00667, "s0.loss_cls": 0.04362, "s0.loss_bbox": 0.02339, "s1.loss_cls": 0.02527, "s1.loss_bbox": 0.04131, "s2.loss_cls": 0.01425, "s2.loss_bbox": 0.04156, "loss": 0.20318, "time": 1.04021}
{"mode": "train", "epoch": 6, "iter": 1000, "lr": 3e-05, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.00697, "loss_rpn_bbox": 0.00731, "s0.loss_cls": 0.0365, "s0.loss_bbox": 0.01965, "s1.loss_cls": 0.02336, "s1.loss_bbox": 0.04025, "s2.loss_cls": 0.01287, "s2.loss_bbox": 0.03916, "loss": 0.18607, "time": 1.04426}
{"mode": "train", "epoch": 6, "iter": 1050, "lr": 3e-05, "memory": 19635, "data_time": 0.00413, "loss_rpn_cls": 0.00585, "loss_rpn_bbox": 0.00692, "s0.loss_cls": 0.04108, "s0.loss_bbox": 0.02077, "s1.loss_cls": 0.02748, "s1.loss_bbox": 0.04972, "s2.loss_cls": 0.01869, "s2.loss_bbox": 0.04872, "loss": 0.21922, "time": 1.04604}
{"mode": "train", "epoch": 6, "iter": 1100, "lr": 3e-05, "memory": 19635, "data_time": 0.00412, "loss_rpn_cls": 0.00815, "loss_rpn_bbox": 0.00585, "s0.loss_cls": 0.04032, "s0.loss_bbox": 0.01833, "s1.loss_cls": 0.02595, "s1.loss_bbox": 0.04139, "s2.loss_cls": 0.01511, "s2.loss_bbox": 0.0424, "loss": 0.1975, "time": 1.04074}
{"mode": "train", "epoch": 6, "iter": 1150, "lr": 3e-05, "memory": 19635, "data_time": 0.00399, "loss_rpn_cls": 0.00739, "loss_rpn_bbox": 0.00625, "s0.loss_cls": 0.03908, "s0.loss_bbox": 0.01839, "s1.loss_cls": 0.02405, "s1.loss_bbox": 0.04022, "s2.loss_cls": 0.01433, "s2.loss_bbox": 0.04288, "loss": 0.19259, "time": 1.05303}
{"mode": "train", "epoch": 6, "iter": 1200, "lr": 3e-05, "memory": 19635, "data_time": 0.00413, "loss_rpn_cls": 0.0093, "loss_rpn_bbox": 0.00686, "s0.loss_cls": 0.03213, "s0.loss_bbox": 0.01534, "s1.loss_cls": 0.01955, "s1.loss_bbox": 0.03153, "s2.loss_cls": 0.01109, "s2.loss_bbox": 0.03458, "loss": 0.16038, "time": 1.05612}
{"mode": "train", "epoch": 6, "iter": 1250, "lr": 3e-05, "memory": 19635, "data_time": 0.00403, "loss_rpn_cls": 0.00808, "loss_rpn_bbox": 0.00802, "s0.loss_cls": 0.03859, "s0.loss_bbox": 0.01979, "s1.loss_cls": 0.02381, "s1.loss_bbox": 0.04227, "s2.loss_cls": 0.01357, "s2.loss_bbox": 0.04531, "loss": 0.19944, "time": 1.04578}
{"mode": "train", "epoch": 6, "iter": 1300, "lr": 3e-05, "memory": 19635, "data_time": 0.00418, "loss_rpn_cls": 0.00647, "loss_rpn_bbox": 0.00572, "s0.loss_cls": 0.03961, "s0.loss_bbox": 0.02075, "s1.loss_cls": 0.02516, "s1.loss_bbox": 0.04339, "s2.loss_cls": 0.01507, "s2.loss_bbox": 0.04483, "loss": 0.201, "time": 1.04303}
{"mode": "train", "epoch": 6, "iter": 1350, "lr": 3e-05, "memory": 19635, "data_time": 0.00439, "loss_rpn_cls": 0.00856, "loss_rpn_bbox": 0.00524, "s0.loss_cls": 0.0359, "s0.loss_bbox": 0.01821, "s1.loss_cls": 0.02347, "s1.loss_bbox": 0.04321, "s2.loss_cls": 0.01523, "s2.loss_bbox": 0.04668, "loss": 0.19649, "time": 1.0598}
{"mode": "train", "epoch": 6, "iter": 1400, "lr": 3e-05, "memory": 19635, "data_time": 0.00405, "loss_rpn_cls": 0.00704, "loss_rpn_bbox": 0.00633, "s0.loss_cls": 0.05074, "s0.loss_bbox": 0.02414, "s1.loss_cls": 0.02976, "s1.loss_bbox": 0.04747, "s2.loss_cls": 0.0177, "s2.loss_bbox": 0.04384, "loss": 0.22701, "time": 1.04352}
{"mode": "train", "epoch": 6, "iter": 1450, "lr": 3e-05, "memory": 19635, "data_time": 0.00446, "loss_rpn_cls": 0.00689, "loss_rpn_bbox": 0.00739, "s0.loss_cls": 0.04794, "s0.loss_bbox": 0.02311, "s1.loss_cls": 0.02923, "s1.loss_bbox": 0.04506, "s2.loss_cls": 0.01658, "s2.loss_bbox": 0.04551, "loss": 0.22171, "time": 1.04406}
{"mode": "train", "epoch": 6, "iter": 1500, "lr": 3e-05, "memory": 19635, "data_time": 0.00406, "loss_rpn_cls": 0.00802, "loss_rpn_bbox": 0.00639, "s0.loss_cls": 0.04682, "s0.loss_bbox": 0.02046, "s1.loss_cls": 0.02826, "s1.loss_bbox": 0.04229, "s2.loss_cls": 0.01557, "s2.loss_bbox": 0.04493, "loss": 0.21274, "time": 1.03735}
{"mode": "train", "epoch": 6, "iter": 1550, "lr": 3e-05, "memory": 19635, "data_time": 0.00407, "loss_rpn_cls": 0.00655, "loss_rpn_bbox": 0.00687, "s0.loss_cls": 0.04357, "s0.loss_bbox": 0.01986, "s1.loss_cls": 0.02705, "s1.loss_bbox": 0.04529, "s2.loss_cls": 0.01519, "s2.loss_bbox": 0.0493, "loss": 0.2137, "time": 1.04392}
{"mode": "train", "epoch": 6, "iter": 1600, "lr": 3e-05, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.00817, "loss_rpn_bbox": 0.00764, "s0.loss_cls": 0.04559, "s0.loss_bbox": 0.02268, "s1.loss_cls": 0.02998, "s1.loss_bbox": 0.0482, "s2.loss_cls": 0.01789, "s2.loss_bbox": 0.04876, "loss": 0.22891, "time": 1.0552}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 3e-05, "memory": 19635, "data_time": 0.06709, "loss_rpn_cls": 0.00666, "loss_rpn_bbox": 0.00568, "s0.loss_cls": 0.04291, "s0.loss_bbox": 0.02291, "s1.loss_cls": 0.02615, "s1.loss_bbox": 0.0487, "s2.loss_cls": 0.01448, "s2.loss_bbox": 0.05097, "loss": 0.21848, "time": 1.11728}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 3e-05, "memory": 19635, "data_time": 0.00461, "loss_rpn_cls": 0.00682, "loss_rpn_bbox": 0.00633, "s0.loss_cls": 0.03613, "s0.loss_bbox": 0.01704, "s1.loss_cls": 0.02286, "s1.loss_bbox": 0.03795, "s2.loss_cls": 0.01213, "s2.loss_bbox": 0.04029, "loss": 0.17957, "time": 1.05049}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 3e-05, "memory": 19635, "data_time": 0.00408, "loss_rpn_cls": 0.00943, "loss_rpn_bbox": 0.00566, "s0.loss_cls": 0.04469, "s0.loss_bbox": 0.01945, "s1.loss_cls": 0.02749, "s1.loss_bbox": 0.04574, "s2.loss_cls": 0.01443, "s2.loss_bbox": 0.05008, "loss": 0.21698, "time": 1.0543}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 3e-05, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.00875, "loss_rpn_bbox": 0.00582, "s0.loss_cls": 0.03585, "s0.loss_bbox": 0.01766, "s1.loss_cls": 0.02113, "s1.loss_bbox": 0.04287, "s2.loss_cls": 0.01268, "s2.loss_bbox": 0.04894, "loss": 0.1937, "time": 1.05256}
{"mode": "train", "epoch": 7, "iter": 250, "lr": 3e-05, "memory": 19635, "data_time": 0.00421, "loss_rpn_cls": 0.00759, "loss_rpn_bbox": 0.00707, "s0.loss_cls": 0.04411, "s0.loss_bbox": 0.02104, "s1.loss_cls": 0.02879, "s1.loss_bbox": 0.04857, "s2.loss_cls": 0.01631, "s2.loss_bbox": 0.05027, "loss": 0.22374, "time": 1.03548}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 3e-05, "memory": 19635, "data_time": 0.0041, "loss_rpn_cls": 0.00549, "loss_rpn_bbox": 0.00498, "s0.loss_cls": 0.03805, "s0.loss_bbox": 0.01926, "s1.loss_cls": 0.02485, "s1.loss_bbox": 0.03883, "s2.loss_cls": 0.01275, "s2.loss_bbox": 0.03899, "loss": 0.18322, "time": 1.0589}
{"mode": "train", "epoch": 7, "iter": 350, "lr": 3e-05, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.00556, "loss_rpn_bbox": 0.0064, "s0.loss_cls": 0.03924, "s0.loss_bbox": 0.01742, "s1.loss_cls": 0.02374, "s1.loss_bbox": 0.03636, "s2.loss_cls": 0.01252, "s2.loss_bbox": 0.04115, "loss": 0.18239, "time": 1.04566}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 3e-05, "memory": 19635, "data_time": 0.00441, "loss_rpn_cls": 0.00776, "loss_rpn_bbox": 0.00638, "s0.loss_cls": 0.04853, "s0.loss_bbox": 0.02116, "s1.loss_cls": 0.02923, "s1.loss_bbox": 0.04209, "s2.loss_cls": 0.01602, "s2.loss_bbox": 0.04184, "loss": 0.21301, "time": 1.05699}
{"mode": "train", "epoch": 7, "iter": 450, "lr": 3e-05, "memory": 19635, "data_time": 0.00408, "loss_rpn_cls": 0.00593, "loss_rpn_bbox": 0.00647, "s0.loss_cls": 0.03744, "s0.loss_bbox": 0.01857, "s1.loss_cls": 0.0239, "s1.loss_bbox": 0.04231, "s2.loss_cls": 0.01299, "s2.loss_bbox": 0.04342, "loss": 0.19102, "time": 1.06074}
{"mode": "train", "epoch": 7, "iter": 500, "lr": 3e-05, "memory": 19635, "data_time": 0.00459, "loss_rpn_cls": 0.00738, "loss_rpn_bbox": 0.00626, "s0.loss_cls": 0.04187, "s0.loss_bbox": 0.01985, "s1.loss_cls": 0.02544, "s1.loss_bbox": 0.04317, "s2.loss_cls": 0.01465, "s2.loss_bbox": 0.0442, "loss": 0.20281, "time": 1.05916}
{"mode": "train", "epoch": 7, "iter": 550, "lr": 3e-05, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.00521, "loss_rpn_bbox": 0.00541, "s0.loss_cls": 0.03335, "s0.loss_bbox": 0.01759, "s1.loss_cls": 0.02254, "s1.loss_bbox": 0.0412, "s2.loss_cls": 0.0137, "s2.loss_bbox": 0.04282, "loss": 0.18181, "time": 1.06137}
{"mode": "train", "epoch": 7, "iter": 600, "lr": 3e-05, "memory": 19635, "data_time": 0.00458, "loss_rpn_cls": 0.0084, "loss_rpn_bbox": 0.00604, "s0.loss_cls": 0.04181, "s0.loss_bbox": 0.02053, "s1.loss_cls": 0.02487, "s1.loss_bbox": 0.04239, "s2.loss_cls": 0.01353, "s2.loss_bbox": 0.0408, "loss": 0.19838, "time": 1.05}
{"mode": "train", "epoch": 7, "iter": 650, "lr": 3e-05, "memory": 19635, "data_time": 0.0044, "loss_rpn_cls": 0.00592, "loss_rpn_bbox": 0.00596, "s0.loss_cls": 0.0416, "s0.loss_bbox": 0.02107, "s1.loss_cls": 0.02663, "s1.loss_bbox": 0.04602, "s2.loss_cls": 0.01571, "s2.loss_bbox": 0.04626, "loss": 0.20916, "time": 1.06097}
{"mode": "train", "epoch": 7, "iter": 700, "lr": 3e-05, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.00871, "loss_rpn_bbox": 0.00647, "s0.loss_cls": 0.0418, "s0.loss_bbox": 0.02125, "s1.loss_cls": 0.02457, "s1.loss_bbox": 0.04138, "s2.loss_cls": 0.01383, "s2.loss_bbox": 0.04401, "loss": 0.20201, "time": 1.05625}
{"mode": "train", "epoch": 7, "iter": 750, "lr": 3e-05, "memory": 19635, "data_time": 0.00428, "loss_rpn_cls": 0.00584, "loss_rpn_bbox": 0.00606, "s0.loss_cls": 0.04296, "s0.loss_bbox": 0.01909, "s1.loss_cls": 0.0256, "s1.loss_bbox": 0.03837, "s2.loss_cls": 0.01435, "s2.loss_bbox": 0.03915, "loss": 0.19142, "time": 1.05796}
{"mode": "train", "epoch": 7, "iter": 800, "lr": 3e-05, "memory": 19635, "data_time": 0.00451, "loss_rpn_cls": 0.00679, "loss_rpn_bbox": 0.00643, "s0.loss_cls": 0.04234, "s0.loss_bbox": 0.02328, "s1.loss_cls": 0.02742, "s1.loss_bbox": 0.05191, "s2.loss_cls": 0.01581, "s2.loss_bbox": 0.04963, "loss": 0.22361, "time": 1.05165}
{"mode": "train", "epoch": 7, "iter": 850, "lr": 3e-05, "memory": 19635, "data_time": 0.00456, "loss_rpn_cls": 0.00726, "loss_rpn_bbox": 0.0067, "s0.loss_cls": 0.0423, "s0.loss_bbox": 0.02284, "s1.loss_cls": 0.02624, "s1.loss_bbox": 0.0461, "s2.loss_cls": 0.01546, "s2.loss_bbox": 0.04713, "loss": 0.21403, "time": 1.07085}
{"mode": "train", "epoch": 7, "iter": 900, "lr": 3e-05, "memory": 19635, "data_time": 0.00432, "loss_rpn_cls": 0.00594, "loss_rpn_bbox": 0.00682, "s0.loss_cls": 0.03621, "s0.loss_bbox": 0.01756, "s1.loss_cls": 0.02549, "s1.loss_bbox": 0.04328, "s2.loss_cls": 0.01492, "s2.loss_bbox": 0.0441, "loss": 0.19431, "time": 1.04497}
{"mode": "train", "epoch": 7, "iter": 950, "lr": 3e-05, "memory": 19635, "data_time": 0.00466, "loss_rpn_cls": 0.00653, "loss_rpn_bbox": 0.00683, "s0.loss_cls": 0.03897, "s0.loss_bbox": 0.01955, "s1.loss_cls": 0.02435, "s1.loss_bbox": 0.04554, "s2.loss_cls": 0.0143, "s2.loss_bbox": 0.04573, "loss": 0.20179, "time": 1.04612}
{"mode": "train", "epoch": 7, "iter": 1000, "lr": 3e-05, "memory": 19635, "data_time": 0.00433, "loss_rpn_cls": 0.00523, "loss_rpn_bbox": 0.00625, "s0.loss_cls": 0.03308, "s0.loss_bbox": 0.01622, "s1.loss_cls": 0.02203, "s1.loss_bbox": 0.04067, "s2.loss_cls": 0.01278, "s2.loss_bbox": 0.04259, "loss": 0.17884, "time": 1.04849}
{"mode": "train", "epoch": 7, "iter": 1050, "lr": 3e-05, "memory": 19635, "data_time": 0.00437, "loss_rpn_cls": 0.00635, "loss_rpn_bbox": 0.00612, "s0.loss_cls": 0.04586, "s0.loss_bbox": 0.02228, "s1.loss_cls": 0.02913, "s1.loss_bbox": 0.04855, "s2.loss_cls": 0.01584, "s2.loss_bbox": 0.05017, "loss": 0.22431, "time": 1.04483}
{"mode": "train", "epoch": 7, "iter": 1100, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00686, "loss_rpn_bbox": 0.0072, "s0.loss_cls": 0.04764, "s0.loss_bbox": 0.0235, "s1.loss_cls": 0.02837, "s1.loss_bbox": 0.04506, "s2.loss_cls": 0.01477, "s2.loss_bbox": 0.04393, "loss": 0.21732, "time": 1.03949}
{"mode": "train", "epoch": 7, "iter": 1150, "lr": 3e-05, "memory": 19635, "data_time": 0.00423, "loss_rpn_cls": 0.00818, "loss_rpn_bbox": 0.00711, "s0.loss_cls": 0.04258, "s0.loss_bbox": 0.01749, "s1.loss_cls": 0.02572, "s1.loss_bbox": 0.03751, "s2.loss_cls": 0.01358, "s2.loss_bbox": 0.03919, "loss": 0.19135, "time": 1.05653}
{"mode": "train", "epoch": 7, "iter": 1200, "lr": 3e-05, "memory": 19635, "data_time": 0.00418, "loss_rpn_cls": 0.00662, "loss_rpn_bbox": 0.00735, "s0.loss_cls": 0.04649, "s0.loss_bbox": 0.02331, "s1.loss_cls": 0.0294, "s1.loss_bbox": 0.04548, "s2.loss_cls": 0.01611, "s2.loss_bbox": 0.04267, "loss": 0.21744, "time": 1.0448}
{"mode": "train", "epoch": 7, "iter": 1250, "lr": 3e-05, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.00926, "loss_rpn_bbox": 0.00707, "s0.loss_cls": 0.04159, "s0.loss_bbox": 0.01991, "s1.loss_cls": 0.02393, "s1.loss_bbox": 0.03805, "s2.loss_cls": 0.01163, "s2.loss_bbox": 0.03941, "loss": 0.19084, "time": 1.05246}
{"mode": "train", "epoch": 7, "iter": 1300, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00463, "loss_rpn_bbox": 0.00639, "s0.loss_cls": 0.02799, "s0.loss_bbox": 0.01359, "s1.loss_cls": 0.01707, "s1.loss_bbox": 0.03262, "s2.loss_cls": 0.01009, "s2.loss_bbox": 0.0371, "loss": 0.14949, "time": 1.05784}
{"mode": "train", "epoch": 7, "iter": 1350, "lr": 3e-05, "memory": 19635, "data_time": 0.00421, "loss_rpn_cls": 0.00499, "loss_rpn_bbox": 0.00591, "s0.loss_cls": 0.03309, "s0.loss_bbox": 0.01539, "s1.loss_cls": 0.02078, "s1.loss_bbox": 0.03749, "s2.loss_cls": 0.01263, "s2.loss_bbox": 0.04194, "loss": 0.17221, "time": 1.06789}
{"mode": "train", "epoch": 7, "iter": 1400, "lr": 3e-05, "memory": 19635, "data_time": 0.00432, "loss_rpn_cls": 0.00557, "loss_rpn_bbox": 0.00569, "s0.loss_cls": 0.03499, "s0.loss_bbox": 0.01757, "s1.loss_cls": 0.02192, "s1.loss_bbox": 0.03708, "s2.loss_cls": 0.01167, "s2.loss_bbox": 0.0392, "loss": 0.17371, "time": 1.06558}
{"mode": "train", "epoch": 7, "iter": 1450, "lr": 3e-05, "memory": 19635, "data_time": 0.00412, "loss_rpn_cls": 0.00755, "loss_rpn_bbox": 0.00666, "s0.loss_cls": 0.03117, "s0.loss_bbox": 0.01444, "s1.loss_cls": 0.01916, "s1.loss_bbox": 0.03312, "s2.loss_cls": 0.01041, "s2.loss_bbox": 0.03618, "loss": 0.15868, "time": 1.03666}
{"mode": "train", "epoch": 7, "iter": 1500, "lr": 3e-05, "memory": 19635, "data_time": 0.00408, "loss_rpn_cls": 0.00723, "loss_rpn_bbox": 0.00583, "s0.loss_cls": 0.04117, "s0.loss_bbox": 0.01876, "s1.loss_cls": 0.02586, "s1.loss_bbox": 0.04068, "s2.loss_cls": 0.01449, "s2.loss_bbox": 0.039, "loss": 0.19301, "time": 1.06387}
{"mode": "train", "epoch": 7, "iter": 1550, "lr": 3e-05, "memory": 19635, "data_time": 0.00426, "loss_rpn_cls": 0.00575, "loss_rpn_bbox": 0.00572, "s0.loss_cls": 0.0316, "s0.loss_bbox": 0.01631, "s1.loss_cls": 0.01903, "s1.loss_bbox": 0.03383, "s2.loss_cls": 0.01061, "s2.loss_bbox": 0.03391, "loss": 0.15676, "time": 1.05636}
{"mode": "train", "epoch": 7, "iter": 1600, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00558, "loss_rpn_bbox": 0.00547, "s0.loss_cls": 0.03856, "s0.loss_bbox": 0.01887, "s1.loss_cls": 0.02165, "s1.loss_bbox": 0.04128, "s2.loss_cls": 0.01246, "s2.loss_bbox": 0.04277, "loss": 0.18666, "time": 1.05543}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 3e-05, "memory": 19635, "data_time": 0.06515, "loss_rpn_cls": 0.00484, "loss_rpn_bbox": 0.00546, "s0.loss_cls": 0.03099, "s0.loss_bbox": 0.01611, "s1.loss_cls": 0.02096, "s1.loss_bbox": 0.03772, "s2.loss_cls": 0.01194, "s2.loss_bbox": 0.03777, "loss": 0.1658, "time": 1.12582}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 3e-05, "memory": 19635, "data_time": 0.00449, "loss_rpn_cls": 0.00576, "loss_rpn_bbox": 0.0058, "s0.loss_cls": 0.03625, "s0.loss_bbox": 0.01866, "s1.loss_cls": 0.02377, "s1.loss_bbox": 0.04277, "s2.loss_cls": 0.01397, "s2.loss_bbox": 0.0443, "loss": 0.19129, "time": 1.06057}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 3e-05, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.00599, "loss_rpn_bbox": 0.00646, "s0.loss_cls": 0.03164, "s0.loss_bbox": 0.01485, "s1.loss_cls": 0.0198, "s1.loss_bbox": 0.03298, "s2.loss_cls": 0.01103, "s2.loss_bbox": 0.03745, "loss": 0.16021, "time": 1.05817}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 3e-05, "memory": 19635, "data_time": 0.00413, "loss_rpn_cls": 0.00605, "loss_rpn_bbox": 0.00576, "s0.loss_cls": 0.0411, "s0.loss_bbox": 0.02073, "s1.loss_cls": 0.02534, "s1.loss_bbox": 0.04375, "s2.loss_cls": 0.01315, "s2.loss_bbox": 0.0459, "loss": 0.20177, "time": 1.06463}
{"mode": "train", "epoch": 8, "iter": 250, "lr": 3e-05, "memory": 19635, "data_time": 0.00443, "loss_rpn_cls": 0.00839, "loss_rpn_bbox": 0.00611, "s0.loss_cls": 0.03841, "s0.loss_bbox": 0.0182, "s1.loss_cls": 0.02316, "s1.loss_bbox": 0.0396, "s2.loss_cls": 0.01335, "s2.loss_bbox": 0.0423, "loss": 0.18951, "time": 1.0538}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00438, "loss_rpn_bbox": 0.00555, "s0.loss_cls": 0.03365, "s0.loss_bbox": 0.01748, "s1.loss_cls": 0.02141, "s1.loss_bbox": 0.03916, "s2.loss_cls": 0.01112, "s2.loss_bbox": 0.04167, "loss": 0.17443, "time": 1.05954}
{"mode": "train", "epoch": 8, "iter": 350, "lr": 3e-05, "memory": 19635, "data_time": 0.00426, "loss_rpn_cls": 0.00604, "loss_rpn_bbox": 0.0077, "s0.loss_cls": 0.03706, "s0.loss_bbox": 0.01949, "s1.loss_cls": 0.02356, "s1.loss_bbox": 0.04466, "s2.loss_cls": 0.01317, "s2.loss_bbox": 0.0461, "loss": 0.19779, "time": 1.05247}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 3e-05, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.0055, "loss_rpn_bbox": 0.00555, "s0.loss_cls": 0.03769, "s0.loss_bbox": 0.01673, "s1.loss_cls": 0.02448, "s1.loss_bbox": 0.04, "s2.loss_cls": 0.0139, "s2.loss_bbox": 0.04373, "loss": 0.18757, "time": 1.04192}
{"mode": "train", "epoch": 8, "iter": 450, "lr": 3e-05, "memory": 19635, "data_time": 0.00447, "loss_rpn_cls": 0.00515, "loss_rpn_bbox": 0.00591, "s0.loss_cls": 0.04497, "s0.loss_bbox": 0.02033, "s1.loss_cls": 0.02768, "s1.loss_bbox": 0.04244, "s2.loss_cls": 0.01584, "s2.loss_bbox": 0.03956, "loss": 0.20187, "time": 1.06285}
{"mode": "train", "epoch": 8, "iter": 500, "lr": 3e-05, "memory": 19635, "data_time": 0.00496, "loss_rpn_cls": 0.00504, "loss_rpn_bbox": 0.00519, "s0.loss_cls": 0.03778, "s0.loss_bbox": 0.01603, "s1.loss_cls": 0.02377, "s1.loss_bbox": 0.03687, "s2.loss_cls": 0.01354, "s2.loss_bbox": 0.04163, "loss": 0.17986, "time": 1.08768}
{"mode": "train", "epoch": 8, "iter": 550, "lr": 3e-05, "memory": 19635, "data_time": 0.00435, "loss_rpn_cls": 0.00625, "loss_rpn_bbox": 0.00621, "s0.loss_cls": 0.03846, "s0.loss_bbox": 0.01839, "s1.loss_cls": 0.02366, "s1.loss_bbox": 0.04242, "s2.loss_cls": 0.01343, "s2.loss_bbox": 0.04467, "loss": 0.19349, "time": 1.05646}
{"mode": "train", "epoch": 8, "iter": 600, "lr": 3e-05, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.00471, "loss_rpn_bbox": 0.00647, "s0.loss_cls": 0.03792, "s0.loss_bbox": 0.01911, "s1.loss_cls": 0.02545, "s1.loss_bbox": 0.04146, "s2.loss_cls": 0.01531, "s2.loss_bbox": 0.04307, "loss": 0.1935, "time": 1.06819}
{"mode": "train", "epoch": 8, "iter": 650, "lr": 3e-05, "memory": 19635, "data_time": 0.00415, "loss_rpn_cls": 0.00483, "loss_rpn_bbox": 0.00614, "s0.loss_cls": 0.03831, "s0.loss_bbox": 0.01796, "s1.loss_cls": 0.02319, "s1.loss_bbox": 0.04255, "s2.loss_cls": 0.01341, "s2.loss_bbox": 0.04639, "loss": 0.19278, "time": 1.04955}
{"mode": "train", "epoch": 8, "iter": 700, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00814, "loss_rpn_bbox": 0.00641, "s0.loss_cls": 0.04069, "s0.loss_bbox": 0.01951, "s1.loss_cls": 0.0248, "s1.loss_bbox": 0.0375, "s2.loss_cls": 0.01425, "s2.loss_bbox": 0.03595, "loss": 0.18725, "time": 1.03232}
{"mode": "train", "epoch": 8, "iter": 750, "lr": 3e-05, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.00733, "loss_rpn_bbox": 0.00549, "s0.loss_cls": 0.03001, "s0.loss_bbox": 0.0148, "s1.loss_cls": 0.01962, "s1.loss_bbox": 0.03823, "s2.loss_cls": 0.01176, "s2.loss_bbox": 0.04492, "loss": 0.17216, "time": 1.05219}
{"mode": "train", "epoch": 8, "iter": 800, "lr": 3e-05, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.00599, "loss_rpn_bbox": 0.00645, "s0.loss_cls": 0.03859, "s0.loss_bbox": 0.02146, "s1.loss_cls": 0.02246, "s1.loss_bbox": 0.04607, "s2.loss_cls": 0.01348, "s2.loss_bbox": 0.04381, "loss": 0.19832, "time": 1.03661}
{"mode": "train", "epoch": 8, "iter": 850, "lr": 3e-05, "memory": 19635, "data_time": 0.00418, "loss_rpn_cls": 0.00461, "loss_rpn_bbox": 0.00583, "s0.loss_cls": 0.03548, "s0.loss_bbox": 0.01627, "s1.loss_cls": 0.02391, "s1.loss_bbox": 0.03424, "s2.loss_cls": 0.01408, "s2.loss_bbox": 0.03626, "loss": 0.17069, "time": 1.04928}
{"mode": "train", "epoch": 8, "iter": 900, "lr": 3e-05, "memory": 19635, "data_time": 0.00413, "loss_rpn_cls": 0.00498, "loss_rpn_bbox": 0.00586, "s0.loss_cls": 0.03298, "s0.loss_bbox": 0.01713, "s1.loss_cls": 0.02138, "s1.loss_bbox": 0.04281, "s2.loss_cls": 0.01348, "s2.loss_bbox": 0.04277, "loss": 0.18139, "time": 1.05669}
{"mode": "train", "epoch": 8, "iter": 950, "lr": 3e-05, "memory": 19635, "data_time": 0.00451, "loss_rpn_cls": 0.00526, "loss_rpn_bbox": 0.00549, "s0.loss_cls": 0.04168, "s0.loss_bbox": 0.02007, "s1.loss_cls": 0.02606, "s1.loss_bbox": 0.0424, "s2.loss_cls": 0.01427, "s2.loss_bbox": 0.04078, "loss": 0.196, "time": 1.04947}
{"mode": "train", "epoch": 8, "iter": 1000, "lr": 3e-05, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.00869, "loss_rpn_bbox": 0.00637, "s0.loss_cls": 0.04102, "s0.loss_bbox": 0.01878, "s1.loss_cls": 0.02527, "s1.loss_bbox": 0.03717, "s2.loss_cls": 0.01339, "s2.loss_bbox": 0.03493, "loss": 0.18563, "time": 1.04668}
{"mode": "train", "epoch": 8, "iter": 1050, "lr": 3e-05, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.00644, "loss_rpn_bbox": 0.00687, "s0.loss_cls": 0.03675, "s0.loss_bbox": 0.0192, "s1.loss_cls": 0.02314, "s1.loss_bbox": 0.0389, "s2.loss_cls": 0.01269, "s2.loss_bbox": 0.03959, "loss": 0.18358, "time": 1.07656}
{"mode": "train", "epoch": 8, "iter": 1100, "lr": 3e-05, "memory": 19635, "data_time": 0.00424, "loss_rpn_cls": 0.00603, "loss_rpn_bbox": 0.00676, "s0.loss_cls": 0.03888, "s0.loss_bbox": 0.01839, "s1.loss_cls": 0.02443, "s1.loss_bbox": 0.03735, "s2.loss_cls": 0.01311, "s2.loss_bbox": 0.03964, "loss": 0.18459, "time": 1.03525}
{"mode": "train", "epoch": 8, "iter": 1150, "lr": 3e-05, "memory": 19635, "data_time": 0.00439, "loss_rpn_cls": 0.0072, "loss_rpn_bbox": 0.00632, "s0.loss_cls": 0.03892, "s0.loss_bbox": 0.01821, "s1.loss_cls": 0.02478, "s1.loss_bbox": 0.04089, "s2.loss_cls": 0.01473, "s2.loss_bbox": 0.04113, "loss": 0.19219, "time": 1.05879}
{"mode": "train", "epoch": 8, "iter": 1200, "lr": 3e-05, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.00637, "loss_rpn_bbox": 0.00557, "s0.loss_cls": 0.03875, "s0.loss_bbox": 0.01791, "s1.loss_cls": 0.02329, "s1.loss_bbox": 0.04419, "s2.loss_cls": 0.01304, "s2.loss_bbox": 0.0495, "loss": 0.1986, "time": 1.06149}
{"mode": "train", "epoch": 8, "iter": 1250, "lr": 3e-05, "memory": 19635, "data_time": 0.00415, "loss_rpn_cls": 0.00714, "loss_rpn_bbox": 0.00569, "s0.loss_cls": 0.03858, "s0.loss_bbox": 0.01869, "s1.loss_cls": 0.02342, "s1.loss_bbox": 0.04063, "s2.loss_cls": 0.01391, "s2.loss_bbox": 0.04311, "loss": 0.19118, "time": 1.04475}
{"mode": "train", "epoch": 8, "iter": 1300, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00694, "loss_rpn_bbox": 0.00629, "s0.loss_cls": 0.04235, "s0.loss_bbox": 0.02106, "s1.loss_cls": 0.02516, "s1.loss_bbox": 0.04333, "s2.loss_cls": 0.01433, "s2.loss_bbox": 0.04239, "loss": 0.20185, "time": 1.04268}
{"mode": "train", "epoch": 8, "iter": 1350, "lr": 3e-05, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.00599, "loss_rpn_bbox": 0.00631, "s0.loss_cls": 0.03644, "s0.loss_bbox": 0.01662, "s1.loss_cls": 0.02358, "s1.loss_bbox": 0.03713, "s2.loss_cls": 0.01315, "s2.loss_bbox": 0.03948, "loss": 0.17871, "time": 1.06944}
{"mode": "train", "epoch": 8, "iter": 1400, "lr": 3e-05, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00637, "loss_rpn_bbox": 0.0057, "s0.loss_cls": 0.04152, "s0.loss_bbox": 0.02086, "s1.loss_cls": 0.02384, "s1.loss_bbox": 0.04515, "s2.loss_cls": 0.01411, "s2.loss_bbox": 0.04534, "loss": 0.20287, "time": 1.05568}
{"mode": "train", "epoch": 8, "iter": 1450, "lr": 3e-05, "memory": 19635, "data_time": 0.00435, "loss_rpn_cls": 0.00591, "loss_rpn_bbox": 0.00594, "s0.loss_cls": 0.03638, "s0.loss_bbox": 0.01855, "s1.loss_cls": 0.02053, "s1.loss_bbox": 0.03868, "s2.loss_cls": 0.01144, "s2.loss_bbox": 0.03821, "loss": 0.17563, "time": 1.04209}
{"mode": "train", "epoch": 8, "iter": 1500, "lr": 3e-05, "memory": 19635, "data_time": 0.00424, "loss_rpn_cls": 0.00744, "loss_rpn_bbox": 0.007, "s0.loss_cls": 0.04318, "s0.loss_bbox": 0.02253, "s1.loss_cls": 0.02487, "s1.loss_bbox": 0.04352, "s2.loss_cls": 0.01311, "s2.loss_bbox": 0.04141, "loss": 0.20307, "time": 1.04625}
{"mode": "train", "epoch": 8, "iter": 1550, "lr": 3e-05, "memory": 19635, "data_time": 0.00416, "loss_rpn_cls": 0.00407, "loss_rpn_bbox": 0.00477, "s0.loss_cls": 0.03115, "s0.loss_bbox": 0.01482, "s1.loss_cls": 0.0194, "s1.loss_bbox": 0.03661, "s2.loss_cls": 0.01197, "s2.loss_bbox": 0.03807, "loss": 0.16086, "time": 1.06576}
{"mode": "train", "epoch": 8, "iter": 1600, "lr": 3e-05, "memory": 19635, "data_time": 0.00445, "loss_rpn_cls": 0.00414, "loss_rpn_bbox": 0.00481, "s0.loss_cls": 0.03298, "s0.loss_bbox": 0.01759, "s1.loss_cls": 0.02082, "s1.loss_bbox": 0.04152, "s2.loss_cls": 0.01303, "s2.loss_bbox": 0.04477, "loss": 0.17967, "time": 1.04836}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.0, "memory": 19635, "data_time": 0.06808, "loss_rpn_cls": 0.00642, "loss_rpn_bbox": 0.00633, "s0.loss_cls": 0.04189, "s0.loss_bbox": 0.01973, "s1.loss_cls": 0.0239, "s1.loss_bbox": 0.03905, "s2.loss_cls": 0.01428, "s2.loss_bbox": 0.03676, "loss": 0.18835, "time": 1.13995}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.0, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.00495, "loss_rpn_bbox": 0.00626, "s0.loss_cls": 0.03312, "s0.loss_bbox": 0.01439, "s1.loss_cls": 0.01942, "s1.loss_bbox": 0.03195, "s2.loss_cls": 0.01061, "s2.loss_bbox": 0.03479, "loss": 0.1555, "time": 1.06447}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.0, "memory": 19635, "data_time": 0.0043, "loss_rpn_cls": 0.00495, "loss_rpn_bbox": 0.00496, "s0.loss_cls": 0.03654, "s0.loss_bbox": 0.0173, "s1.loss_cls": 0.02309, "s1.loss_bbox": 0.04187, "s2.loss_cls": 0.01404, "s2.loss_bbox": 0.04222, "loss": 0.18497, "time": 1.06005}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.0, "memory": 19635, "data_time": 0.00427, "loss_rpn_cls": 0.0049, "loss_rpn_bbox": 0.00515, "s0.loss_cls": 0.03608, "s0.loss_bbox": 0.01741, "s1.loss_cls": 0.02334, "s1.loss_bbox": 0.03861, "s2.loss_cls": 0.01455, "s2.loss_bbox": 0.03959, "loss": 0.17963, "time": 1.06133}
{"mode": "train", "epoch": 9, "iter": 250, "lr": 0.0, "memory": 19635, "data_time": 0.00405, "loss_rpn_cls": 0.00597, "loss_rpn_bbox": 0.0053, "s0.loss_cls": 0.03007, "s0.loss_bbox": 0.01455, "s1.loss_cls": 0.01922, "s1.loss_bbox": 0.03499, "s2.loss_cls": 0.01135, "s2.loss_bbox": 0.03802, "loss": 0.15947, "time": 1.05735}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.0, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.00559, "loss_rpn_bbox": 0.00498, "s0.loss_cls": 0.0312, "s0.loss_bbox": 0.01542, "s1.loss_cls": 0.02066, "s1.loss_bbox": 0.03513, "s2.loss_cls": 0.01185, "s2.loss_bbox": 0.03617, "loss": 0.16101, "time": 1.05246}
{"mode": "train", "epoch": 9, "iter": 350, "lr": 0.0, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.00447, "loss_rpn_bbox": 0.00497, "s0.loss_cls": 0.0346, "s0.loss_bbox": 0.01564, "s1.loss_cls": 0.02121, "s1.loss_bbox": 0.03439, "s2.loss_cls": 0.01121, "s2.loss_bbox": 0.03724, "loss": 0.16373, "time": 1.04596}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 0.0, "memory": 19635, "data_time": 0.00408, "loss_rpn_cls": 0.00697, "loss_rpn_bbox": 0.00592, "s0.loss_cls": 0.03845, "s0.loss_bbox": 0.02019, "s1.loss_cls": 0.02202, "s1.loss_bbox": 0.04244, "s2.loss_cls": 0.01378, "s2.loss_bbox": 0.04305, "loss": 0.19283, "time": 1.04411}
{"mode": "train", "epoch": 9, "iter": 450, "lr": 0.0, "memory": 19635, "data_time": 0.0043, "loss_rpn_cls": 0.00419, "loss_rpn_bbox": 0.0046, "s0.loss_cls": 0.03488, "s0.loss_bbox": 0.01557, "s1.loss_cls": 0.02094, "s1.loss_bbox": 0.03533, "s2.loss_cls": 0.0114, "s2.loss_bbox": 0.03966, "loss": 0.16656, "time": 1.05646}
{"mode": "train", "epoch": 9, "iter": 500, "lr": 0.0, "memory": 19635, "data_time": 0.00408, "loss_rpn_cls": 0.00376, "loss_rpn_bbox": 0.00463, "s0.loss_cls": 0.0299, "s0.loss_bbox": 0.01633, "s1.loss_cls": 0.01945, "s1.loss_bbox": 0.03654, "s2.loss_cls": 0.01155, "s2.loss_bbox": 0.03776, "loss": 0.1599, "time": 1.07359}
{"mode": "train", "epoch": 9, "iter": 550, "lr": 0.0, "memory": 19635, "data_time": 0.00392, "loss_rpn_cls": 0.0047, "loss_rpn_bbox": 0.00479, "s0.loss_cls": 0.02995, "s0.loss_bbox": 0.01534, "s1.loss_cls": 0.01867, "s1.loss_bbox": 0.03593, "s2.loss_cls": 0.01108, "s2.loss_bbox": 0.03926, "loss": 0.15973, "time": 1.06017}
{"mode": "train", "epoch": 9, "iter": 600, "lr": 0.0, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.00691, "loss_rpn_bbox": 0.0052, "s0.loss_cls": 0.03982, "s0.loss_bbox": 0.01961, "s1.loss_cls": 0.02389, "s1.loss_bbox": 0.04209, "s2.loss_cls": 0.01486, "s2.loss_bbox": 0.04296, "loss": 0.19533, "time": 1.05626}
{"mode": "train", "epoch": 9, "iter": 650, "lr": 0.0, "memory": 19635, "data_time": 0.00396, "loss_rpn_cls": 0.00425, "loss_rpn_bbox": 0.00467, "s0.loss_cls": 0.03381, "s0.loss_bbox": 0.01658, "s1.loss_cls": 0.0197, "s1.loss_bbox": 0.03566, "s2.loss_cls": 0.01166, "s2.loss_bbox": 0.03738, "loss": 0.16371, "time": 1.06022}
{"mode": "train", "epoch": 9, "iter": 700, "lr": 0.0, "memory": 19635, "data_time": 0.00445, "loss_rpn_cls": 0.00475, "loss_rpn_bbox": 0.00549, "s0.loss_cls": 0.03521, "s0.loss_bbox": 0.01788, "s1.loss_cls": 0.02152, "s1.loss_bbox": 0.03917, "s2.loss_cls": 0.01229, "s2.loss_bbox": 0.04137, "loss": 0.17767, "time": 1.03956}
{"mode": "train", "epoch": 9, "iter": 750, "lr": 0.0, "memory": 19635, "data_time": 0.00407, "loss_rpn_cls": 0.005, "loss_rpn_bbox": 0.00497, "s0.loss_cls": 0.02984, "s0.loss_bbox": 0.01518, "s1.loss_cls": 0.01936, "s1.loss_bbox": 0.03373, "s2.loss_cls": 0.01083, "s2.loss_bbox": 0.0361, "loss": 0.15502, "time": 1.05117}
{"mode": "train", "epoch": 9, "iter": 800, "lr": 0.0, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.00485, "loss_rpn_bbox": 0.00477, "s0.loss_cls": 0.03741, "s0.loss_bbox": 0.01669, "s1.loss_cls": 0.02335, "s1.loss_bbox": 0.04036, "s2.loss_cls": 0.01344, "s2.loss_bbox": 0.04095, "loss": 0.18183, "time": 1.02641}
{"mode": "train", "epoch": 9, "iter": 850, "lr": 0.0, "memory": 19635, "data_time": 0.00428, "loss_rpn_cls": 0.00417, "loss_rpn_bbox": 0.00421, "s0.loss_cls": 0.03499, "s0.loss_bbox": 0.01602, "s1.loss_cls": 0.02135, "s1.loss_bbox": 0.03559, "s2.loss_cls": 0.01267, "s2.loss_bbox": 0.03551, "loss": 0.16449, "time": 1.04926}
{"mode": "train", "epoch": 9, "iter": 900, "lr": 0.0, "memory": 19635, "data_time": 0.00458, "loss_rpn_cls": 0.00637, "loss_rpn_bbox": 0.00487, "s0.loss_cls": 0.03217, "s0.loss_bbox": 0.01684, "s1.loss_cls": 0.02017, "s1.loss_bbox": 0.03689, "s2.loss_cls": 0.01275, "s2.loss_bbox": 0.03651, "loss": 0.16658, "time": 1.03938}
{"mode": "train", "epoch": 9, "iter": 950, "lr": 0.0, "memory": 19635, "data_time": 0.00464, "loss_rpn_cls": 0.00672, "loss_rpn_bbox": 0.00435, "s0.loss_cls": 0.03651, "s0.loss_bbox": 0.01599, "s1.loss_cls": 0.02055, "s1.loss_bbox": 0.03698, "s2.loss_cls": 0.01188, "s2.loss_bbox": 0.03812, "loss": 0.1711, "time": 1.07645}
{"mode": "train", "epoch": 9, "iter": 1000, "lr": 0.0, "memory": 19635, "data_time": 0.00407, "loss_rpn_cls": 0.00355, "loss_rpn_bbox": 0.00417, "s0.loss_cls": 0.03066, "s0.loss_bbox": 0.01518, "s1.loss_cls": 0.01936, "s1.loss_bbox": 0.03725, "s2.loss_cls": 0.01061, "s2.loss_bbox": 0.0391, "loss": 0.15989, "time": 1.05953}
{"mode": "train", "epoch": 9, "iter": 1050, "lr": 0.0, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.00411, "loss_rpn_bbox": 0.00445, "s0.loss_cls": 0.03272, "s0.loss_bbox": 0.01493, "s1.loss_cls": 0.02033, "s1.loss_bbox": 0.03506, "s2.loss_cls": 0.0115, "s2.loss_bbox": 0.03721, "loss": 0.1603, "time": 1.03318}
{"mode": "train", "epoch": 9, "iter": 1100, "lr": 0.0, "memory": 19635, "data_time": 0.00418, "loss_rpn_cls": 0.00473, "loss_rpn_bbox": 0.00623, "s0.loss_cls": 0.03646, "s0.loss_bbox": 0.0189, "s1.loss_cls": 0.02098, "s1.loss_bbox": 0.03951, "s2.loss_cls": 0.01075, "s2.loss_bbox": 0.04102, "loss": 0.17858, "time": 1.03629}
{"mode": "train", "epoch": 9, "iter": 1150, "lr": 0.0, "memory": 19635, "data_time": 0.00426, "loss_rpn_cls": 0.00375, "loss_rpn_bbox": 0.00477, "s0.loss_cls": 0.02938, "s0.loss_bbox": 0.01459, "s1.loss_cls": 0.01834, "s1.loss_bbox": 0.03621, "s2.loss_cls": 0.01101, "s2.loss_bbox": 0.03828, "loss": 0.15633, "time": 1.06075}
{"mode": "train", "epoch": 9, "iter": 1200, "lr": 0.0, "memory": 19635, "data_time": 0.0041, "loss_rpn_cls": 0.00418, "loss_rpn_bbox": 0.00476, "s0.loss_cls": 0.03689, "s0.loss_bbox": 0.01763, "s1.loss_cls": 0.02059, "s1.loss_bbox": 0.03352, "s2.loss_cls": 0.01083, "s2.loss_bbox": 0.03451, "loss": 0.16291, "time": 1.04108}
{"mode": "train", "epoch": 9, "iter": 1250, "lr": 0.0, "memory": 19635, "data_time": 0.00424, "loss_rpn_cls": 0.00387, "loss_rpn_bbox": 0.0046, "s0.loss_cls": 0.02902, "s0.loss_bbox": 0.01347, "s1.loss_cls": 0.01701, "s1.loss_bbox": 0.03465, "s2.loss_cls": 0.00933, "s2.loss_bbox": 0.03897, "loss": 0.15093, "time": 1.05542}
{"mode": "train", "epoch": 9, "iter": 1300, "lr": 0.0, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.00493, "loss_rpn_bbox": 0.00484, "s0.loss_cls": 0.02824, "s0.loss_bbox": 0.01314, "s1.loss_cls": 0.01808, "s1.loss_bbox": 0.03158, "s2.loss_cls": 0.01086, "s2.loss_bbox": 0.03316, "loss": 0.14484, "time": 1.04128}
{"mode": "train", "epoch": 9, "iter": 1350, "lr": 0.0, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.00505, "loss_rpn_bbox": 0.00462, "s0.loss_cls": 0.03932, "s0.loss_bbox": 0.01879, "s1.loss_cls": 0.0226, "s1.loss_bbox": 0.03718, "s2.loss_cls": 0.01132, "s2.loss_bbox": 0.03706, "loss": 0.17592, "time": 1.0345}
{"mode": "train", "epoch": 9, "iter": 1400, "lr": 0.0, "memory": 19635, "data_time": 0.0043, "loss_rpn_cls": 0.00543, "loss_rpn_bbox": 0.00452, "s0.loss_cls": 0.02785, "s0.loss_bbox": 0.01304, "s1.loss_cls": 0.01622, "s1.loss_bbox": 0.03007, "s2.loss_cls": 0.00918, "s2.loss_bbox": 0.03213, "loss": 0.13844, "time": 1.04943}
{"mode": "train", "epoch": 9, "iter": 1450, "lr": 0.0, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.00458, "loss_rpn_bbox": 0.00435, "s0.loss_cls": 0.0309, "s0.loss_bbox": 0.01394, "s1.loss_cls": 0.01956, "s1.loss_bbox": 0.03504, "s2.loss_cls": 0.0112, "s2.loss_bbox": 0.03939, "loss": 0.15894, "time": 1.05905}
{"mode": "train", "epoch": 9, "iter": 1500, "lr": 0.0, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.00533, "loss_rpn_bbox": 0.00482, "s0.loss_cls": 0.0342, "s0.loss_bbox": 0.0158, "s1.loss_cls": 0.01903, "s1.loss_bbox": 0.03501, "s2.loss_cls": 0.01027, "s2.loss_bbox": 0.0373, "loss": 0.16177, "time": 1.04916}
{"mode": "train", "epoch": 9, "iter": 1550, "lr": 0.0, "memory": 19635, "data_time": 0.00417, "loss_rpn_cls": 0.00412, "loss_rpn_bbox": 0.00414, "s0.loss_cls": 0.03141, "s0.loss_bbox": 0.01734, "s1.loss_cls": 0.01832, "s1.loss_bbox": 0.03953, "s2.loss_cls": 0.01014, "s2.loss_bbox": 0.04316, "loss": 0.16816, "time": 1.06101}
{"mode": "train", "epoch": 9, "iter": 1600, "lr": 0.0, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.00433, "loss_rpn_bbox": 0.00511, "s0.loss_cls": 0.03725, "s0.loss_bbox": 0.01768, "s1.loss_cls": 0.0223, "s1.loss_bbox": 0.03925, "s2.loss_cls": 0.01394, "s2.loss_bbox": 0.03756, "loss": 0.17742, "time": 1.05982}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.0, "memory": 19635, "data_time": 0.06754, "loss_rpn_cls": 0.00506, "loss_rpn_bbox": 0.00577, "s0.loss_cls": 0.03003, "s0.loss_bbox": 0.01399, "s1.loss_cls": 0.01855, "s1.loss_bbox": 0.02954, "s2.loss_cls": 0.00983, "s2.loss_bbox": 0.03256, "loss": 0.14532, "time": 1.1285}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.0, "memory": 19635, "data_time": 0.00423, "loss_rpn_cls": 0.00365, "loss_rpn_bbox": 0.00392, "s0.loss_cls": 0.03001, "s0.loss_bbox": 0.01592, "s1.loss_cls": 0.01734, "s1.loss_bbox": 0.0344, "s2.loss_cls": 0.01033, "s2.loss_bbox": 0.0331, "loss": 0.14868, "time": 1.04933}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.0, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00402, "loss_rpn_bbox": 0.00371, "s0.loss_cls": 0.03009, "s0.loss_bbox": 0.01302, "s1.loss_cls": 0.01752, "s1.loss_bbox": 0.03149, "s2.loss_cls": 0.00945, "s2.loss_bbox": 0.03543, "loss": 0.14472, "time": 1.05025}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.0, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.0045, "loss_rpn_bbox": 0.00534, "s0.loss_cls": 0.02793, "s0.loss_bbox": 0.01329, "s1.loss_cls": 0.01672, "s1.loss_bbox": 0.03283, "s2.loss_cls": 0.00995, "s2.loss_bbox": 0.03565, "loss": 0.1462, "time": 1.04183}
{"mode": "train", "epoch": 10, "iter": 250, "lr": 0.0, "memory": 19635, "data_time": 0.00447, "loss_rpn_cls": 0.00378, "loss_rpn_bbox": 0.00538, "s0.loss_cls": 0.03358, "s0.loss_bbox": 0.01569, "s1.loss_cls": 0.01882, "s1.loss_bbox": 0.03462, "s2.loss_cls": 0.01029, "s2.loss_bbox": 0.03568, "loss": 0.15783, "time": 1.06481}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.0, "memory": 19635, "data_time": 0.00444, "loss_rpn_cls": 0.0051, "loss_rpn_bbox": 0.00502, "s0.loss_cls": 0.03196, "s0.loss_bbox": 0.01541, "s1.loss_cls": 0.02028, "s1.loss_bbox": 0.03618, "s2.loss_cls": 0.01179, "s2.loss_bbox": 0.03726, "loss": 0.163, "time": 1.05844}
{"mode": "train", "epoch": 10, "iter": 350, "lr": 0.0, "memory": 19635, "data_time": 0.00399, "loss_rpn_cls": 0.00496, "loss_rpn_bbox": 0.00373, "s0.loss_cls": 0.032, "s0.loss_bbox": 0.01571, "s1.loss_cls": 0.01811, "s1.loss_bbox": 0.0332, "s2.loss_cls": 0.01007, "s2.loss_bbox": 0.03415, "loss": 0.15195, "time": 1.04113}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 0.0, "memory": 19635, "data_time": 0.00408, "loss_rpn_cls": 0.00679, "loss_rpn_bbox": 0.00388, "s0.loss_cls": 0.02636, "s0.loss_bbox": 0.01174, "s1.loss_cls": 0.01623, "s1.loss_bbox": 0.02882, "s2.loss_cls": 0.00877, "s2.loss_bbox": 0.03447, "loss": 0.13705, "time": 1.05424}
{"mode": "train", "epoch": 10, "iter": 450, "lr": 0.0, "memory": 19635, "data_time": 0.00431, "loss_rpn_cls": 0.00323, "loss_rpn_bbox": 0.00349, "s0.loss_cls": 0.02532, "s0.loss_bbox": 0.01191, "s1.loss_cls": 0.01765, "s1.loss_bbox": 0.03031, "s2.loss_cls": 0.00955, "s2.loss_bbox": 0.03402, "loss": 0.13547, "time": 1.05955}
{"mode": "train", "epoch": 10, "iter": 500, "lr": 0.0, "memory": 19635, "data_time": 0.00464, "loss_rpn_cls": 0.00638, "loss_rpn_bbox": 0.00442, "s0.loss_cls": 0.03169, "s0.loss_bbox": 0.01511, "s1.loss_cls": 0.01912, "s1.loss_bbox": 0.03422, "s2.loss_cls": 0.01068, "s2.loss_bbox": 0.03494, "loss": 0.15655, "time": 1.05031}
{"mode": "train", "epoch": 10, "iter": 550, "lr": 0.0, "memory": 19635, "data_time": 0.00418, "loss_rpn_cls": 0.00486, "loss_rpn_bbox": 0.00442, "s0.loss_cls": 0.03381, "s0.loss_bbox": 0.01684, "s1.loss_cls": 0.02107, "s1.loss_bbox": 0.0375, "s2.loss_cls": 0.01165, "s2.loss_bbox": 0.03781, "loss": 0.16796, "time": 1.03953}
{"mode": "train", "epoch": 10, "iter": 600, "lr": 0.0, "memory": 19635, "data_time": 0.00439, "loss_rpn_cls": 0.00389, "loss_rpn_bbox": 0.00534, "s0.loss_cls": 0.02709, "s0.loss_bbox": 0.01313, "s1.loss_cls": 0.01671, "s1.loss_bbox": 0.0294, "s2.loss_cls": 0.009, "s2.loss_bbox": 0.03097, "loss": 0.13553, "time": 1.07572}
{"mode": "train", "epoch": 10, "iter": 650, "lr": 0.0, "memory": 19635, "data_time": 0.00415, "loss_rpn_cls": 0.00362, "loss_rpn_bbox": 0.00423, "s0.loss_cls": 0.03133, "s0.loss_bbox": 0.01499, "s1.loss_cls": 0.01892, "s1.loss_bbox": 0.03383, "s2.loss_cls": 0.01023, "s2.loss_bbox": 0.03386, "loss": 0.15101, "time": 1.04762}
{"mode": "train", "epoch": 10, "iter": 700, "lr": 0.0, "memory": 19635, "data_time": 0.00402, "loss_rpn_cls": 0.00507, "loss_rpn_bbox": 0.00457, "s0.loss_cls": 0.02689, "s0.loss_bbox": 0.01326, "s1.loss_cls": 0.01513, "s1.loss_bbox": 0.02738, "s2.loss_cls": 0.00755, "s2.loss_bbox": 0.03058, "loss": 0.13043, "time": 1.05428}
{"mode": "train", "epoch": 10, "iter": 750, "lr": 0.0, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.00544, "loss_rpn_bbox": 0.00469, "s0.loss_cls": 0.0294, "s0.loss_bbox": 0.01492, "s1.loss_cls": 0.01908, "s1.loss_bbox": 0.03742, "s2.loss_cls": 0.01041, "s2.loss_bbox": 0.04097, "loss": 0.16234, "time": 1.04348}
{"mode": "train", "epoch": 10, "iter": 800, "lr": 0.0, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.00444, "loss_rpn_bbox": 0.00429, "s0.loss_cls": 0.02953, "s0.loss_bbox": 0.01391, "s1.loss_cls": 0.01781, "s1.loss_bbox": 0.03483, "s2.loss_cls": 0.01048, "s2.loss_bbox": 0.0386, "loss": 0.15389, "time": 1.04375}
{"mode": "train", "epoch": 10, "iter": 850, "lr": 0.0, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.00505, "loss_rpn_bbox": 0.00492, "s0.loss_cls": 0.0403, "s0.loss_bbox": 0.01953, "s1.loss_cls": 0.02404, "s1.loss_bbox": 0.04274, "s2.loss_cls": 0.01427, "s2.loss_bbox": 0.04139, "loss": 0.19226, "time": 1.06527}
{"mode": "train", "epoch": 10, "iter": 900, "lr": 0.0, "memory": 19635, "data_time": 0.00465, "loss_rpn_cls": 0.00681, "loss_rpn_bbox": 0.00455, "s0.loss_cls": 0.03425, "s0.loss_bbox": 0.01757, "s1.loss_cls": 0.01928, "s1.loss_bbox": 0.03892, "s2.loss_cls": 0.01031, "s2.loss_bbox": 0.0413, "loss": 0.17299, "time": 1.04864}
{"mode": "train", "epoch": 10, "iter": 950, "lr": 0.0, "memory": 19635, "data_time": 0.00413, "loss_rpn_cls": 0.00376, "loss_rpn_bbox": 0.00466, "s0.loss_cls": 0.0279, "s0.loss_bbox": 0.0137, "s1.loss_cls": 0.01789, "s1.loss_bbox": 0.03398, "s2.loss_cls": 0.0108, "s2.loss_bbox": 0.03829, "loss": 0.15097, "time": 1.06497}
{"mode": "train", "epoch": 10, "iter": 1000, "lr": 0.0, "memory": 19635, "data_time": 0.00416, "loss_rpn_cls": 0.00461, "loss_rpn_bbox": 0.00428, "s0.loss_cls": 0.03326, "s0.loss_bbox": 0.01699, "s1.loss_cls": 0.01968, "s1.loss_bbox": 0.03592, "s2.loss_cls": 0.01106, "s2.loss_bbox": 0.03558, "loss": 0.16137, "time": 1.05408}
{"mode": "train", "epoch": 10, "iter": 1050, "lr": 0.0, "memory": 19635, "data_time": 0.00412, "loss_rpn_cls": 0.00384, "loss_rpn_bbox": 0.00461, "s0.loss_cls": 0.03026, "s0.loss_bbox": 0.01486, "s1.loss_cls": 0.01977, "s1.loss_bbox": 0.03272, "s2.loss_cls": 0.0123, "s2.loss_bbox": 0.03181, "loss": 0.15017, "time": 1.04818}
{"mode": "train", "epoch": 10, "iter": 1100, "lr": 0.0, "memory": 19635, "data_time": 0.00417, "loss_rpn_cls": 0.00566, "loss_rpn_bbox": 0.00482, "s0.loss_cls": 0.0344, "s0.loss_bbox": 0.01653, "s1.loss_cls": 0.02031, "s1.loss_bbox": 0.03721, "s2.loss_cls": 0.01157, "s2.loss_bbox": 0.04179, "loss": 0.17229, "time": 1.04225}
{"mode": "train", "epoch": 10, "iter": 1150, "lr": 0.0, "memory": 19635, "data_time": 0.00396, "loss_rpn_cls": 0.00473, "loss_rpn_bbox": 0.00466, "s0.loss_cls": 0.0309, "s0.loss_bbox": 0.01553, "s1.loss_cls": 0.02003, "s1.loss_bbox": 0.03573, "s2.loss_cls": 0.01143, "s2.loss_bbox": 0.03747, "loss": 0.16049, "time": 1.07043}
{"mode": "train", "epoch": 10, "iter": 1200, "lr": 0.0, "memory": 19635, "data_time": 0.00465, "loss_rpn_cls": 0.00404, "loss_rpn_bbox": 0.00549, "s0.loss_cls": 0.03147, "s0.loss_bbox": 0.01576, "s1.loss_cls": 0.01966, "s1.loss_bbox": 0.03565, "s2.loss_cls": 0.01038, "s2.loss_bbox": 0.03859, "loss": 0.16105, "time": 1.05075}
{"mode": "train", "epoch": 10, "iter": 1250, "lr": 0.0, "memory": 19635, "data_time": 0.00433, "loss_rpn_cls": 0.00348, "loss_rpn_bbox": 0.00486, "s0.loss_cls": 0.02439, "s0.loss_bbox": 0.01219, "s1.loss_cls": 0.01523, "s1.loss_bbox": 0.02921, "s2.loss_cls": 0.00821, "s2.loss_bbox": 0.0314, "loss": 0.12896, "time": 1.04248}
{"mode": "train", "epoch": 10, "iter": 1300, "lr": 0.0, "memory": 19635, "data_time": 0.00401, "loss_rpn_cls": 0.00379, "loss_rpn_bbox": 0.00501, "s0.loss_cls": 0.02873, "s0.loss_bbox": 0.01541, "s1.loss_cls": 0.01996, "s1.loss_bbox": 0.03527, "s2.loss_cls": 0.01149, "s2.loss_bbox": 0.03608, "loss": 0.15574, "time": 1.0467}
{"mode": "train", "epoch": 10, "iter": 1350, "lr": 0.0, "memory": 19635, "data_time": 0.00423, "loss_rpn_cls": 0.00324, "loss_rpn_bbox": 0.00351, "s0.loss_cls": 0.02695, "s0.loss_bbox": 0.01275, "s1.loss_cls": 0.0171, "s1.loss_bbox": 0.0324, "s2.loss_cls": 0.01006, "s2.loss_bbox": 0.03577, "loss": 0.14176, "time": 1.05927}
{"mode": "train", "epoch": 10, "iter": 1400, "lr": 0.0, "memory": 19635, "data_time": 0.0045, "loss_rpn_cls": 0.00498, "loss_rpn_bbox": 0.0043, "s0.loss_cls": 0.03174, "s0.loss_bbox": 0.01514, "s1.loss_cls": 0.01985, "s1.loss_bbox": 0.03031, "s2.loss_cls": 0.01043, "s2.loss_bbox": 0.03096, "loss": 0.1477, "time": 1.06231}
{"mode": "train", "epoch": 10, "iter": 1450, "lr": 0.0, "memory": 19635, "data_time": 0.00418, "loss_rpn_cls": 0.00463, "loss_rpn_bbox": 0.0048, "s0.loss_cls": 0.02616, "s0.loss_bbox": 0.01249, "s1.loss_cls": 0.01759, "s1.loss_bbox": 0.03002, "s2.loss_cls": 0.00971, "s2.loss_bbox": 0.03279, "loss": 0.13818, "time": 1.02759}
{"mode": "train", "epoch": 10, "iter": 1500, "lr": 0.0, "memory": 19635, "data_time": 0.00449, "loss_rpn_cls": 0.00384, "loss_rpn_bbox": 0.00381, "s0.loss_cls": 0.02679, "s0.loss_bbox": 0.01262, "s1.loss_cls": 0.01709, "s1.loss_bbox": 0.03007, "s2.loss_cls": 0.00964, "s2.loss_bbox": 0.03039, "loss": 0.13424, "time": 1.04653}
{"mode": "train", "epoch": 10, "iter": 1550, "lr": 0.0, "memory": 19635, "data_time": 0.00522, "loss_rpn_cls": 0.00487, "loss_rpn_bbox": 0.00429, "s0.loss_cls": 0.03161, "s0.loss_bbox": 0.01595, "s1.loss_cls": 0.01863, "s1.loss_bbox": 0.03564, "s2.loss_cls": 0.01109, "s2.loss_bbox": 0.03627, "loss": 0.15834, "time": 1.05947}
{"mode": "train", "epoch": 10, "iter": 1600, "lr": 0.0, "memory": 19635, "data_time": 0.0046, "loss_rpn_cls": 0.00414, "loss_rpn_bbox": 0.00396, "s0.loss_cls": 0.03154, "s0.loss_bbox": 0.01632, "s1.loss_cls": 0.01883, "s1.loss_bbox": 0.03579, "s2.loss_cls": 0.01038, "s2.loss_bbox": 0.03486, "loss": 0.15582, "time": 1.06314}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.0, "memory": 19635, "data_time": 0.06358, "loss_rpn_cls": 0.00468, "loss_rpn_bbox": 0.00527, "s0.loss_cls": 0.03169, "s0.loss_bbox": 0.01659, "s1.loss_cls": 0.01849, "s1.loss_bbox": 0.03772, "s2.loss_cls": 0.01064, "s2.loss_bbox": 0.03897, "loss": 0.16404, "time": 1.08941}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.0, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.00472, "loss_rpn_bbox": 0.00474, "s0.loss_cls": 0.03936, "s0.loss_bbox": 0.02171, "s1.loss_cls": 0.02349, "s1.loss_bbox": 0.04202, "s2.loss_cls": 0.0123, "s2.loss_bbox": 0.03703, "loss": 0.18536, "time": 1.05571}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.0, "memory": 19635, "data_time": 0.00428, "loss_rpn_cls": 0.00519, "loss_rpn_bbox": 0.00483, "s0.loss_cls": 0.03475, "s0.loss_bbox": 0.01639, "s1.loss_cls": 0.0217, "s1.loss_bbox": 0.03336, "s2.loss_cls": 0.01128, "s2.loss_bbox": 0.03769, "loss": 0.16518, "time": 1.04126}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.0, "memory": 19635, "data_time": 0.00426, "loss_rpn_cls": 0.00455, "loss_rpn_bbox": 0.00438, "s0.loss_cls": 0.02817, "s0.loss_bbox": 0.0128, "s1.loss_cls": 0.01685, "s1.loss_bbox": 0.02915, "s2.loss_cls": 0.00893, "s2.loss_bbox": 0.03103, "loss": 0.13586, "time": 1.06198}
{"mode": "train", "epoch": 11, "iter": 250, "lr": 0.0, "memory": 19635, "data_time": 0.00395, "loss_rpn_cls": 0.00679, "loss_rpn_bbox": 0.00426, "s0.loss_cls": 0.02739, "s0.loss_bbox": 0.01227, "s1.loss_cls": 0.01633, "s1.loss_bbox": 0.02892, "s2.loss_cls": 0.00921, "s2.loss_bbox": 0.03241, "loss": 0.13757, "time": 1.05352}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 0.0, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.00357, "loss_rpn_bbox": 0.00427, "s0.loss_cls": 0.0316, "s0.loss_bbox": 0.01556, "s1.loss_cls": 0.02136, "s1.loss_bbox": 0.03675, "s2.loss_cls": 0.01224, "s2.loss_bbox": 0.03821, "loss": 0.16355, "time": 1.05689}
{"mode": "train", "epoch": 11, "iter": 350, "lr": 0.0, "memory": 19635, "data_time": 0.00431, "loss_rpn_cls": 0.00359, "loss_rpn_bbox": 0.00421, "s0.loss_cls": 0.02949, "s0.loss_bbox": 0.01415, "s1.loss_cls": 0.01891, "s1.loss_bbox": 0.0341, "s2.loss_cls": 0.00999, "s2.loss_bbox": 0.03545, "loss": 0.14989, "time": 1.03424}
{"mode": "train", "epoch": 11, "iter": 400, "lr": 0.0, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.00376, "loss_rpn_bbox": 0.00485, "s0.loss_cls": 0.03011, "s0.loss_bbox": 0.01532, "s1.loss_cls": 0.0184, "s1.loss_bbox": 0.03647, "s2.loss_cls": 0.00999, "s2.loss_bbox": 0.03681, "loss": 0.1557, "time": 1.03617}
{"mode": "train", "epoch": 11, "iter": 450, "lr": 0.0, "memory": 19635, "data_time": 0.00428, "loss_rpn_cls": 0.00717, "loss_rpn_bbox": 0.00481, "s0.loss_cls": 0.02562, "s0.loss_bbox": 0.01192, "s1.loss_cls": 0.01625, "s1.loss_bbox": 0.0277, "s2.loss_cls": 0.00854, "s2.loss_bbox": 0.03117, "loss": 0.13318, "time": 1.03659}
{"mode": "train", "epoch": 11, "iter": 500, "lr": 0.0, "memory": 19635, "data_time": 0.0044, "loss_rpn_cls": 0.00843, "loss_rpn_bbox": 0.00429, "s0.loss_cls": 0.03229, "s0.loss_bbox": 0.01652, "s1.loss_cls": 0.01792, "s1.loss_bbox": 0.03377, "s2.loss_cls": 0.00917, "s2.loss_bbox": 0.03551, "loss": 0.15791, "time": 1.04525}
{"mode": "train", "epoch": 11, "iter": 550, "lr": 0.0, "memory": 19635, "data_time": 0.00457, "loss_rpn_cls": 0.00371, "loss_rpn_bbox": 0.00435, "s0.loss_cls": 0.03027, "s0.loss_bbox": 0.0147, "s1.loss_cls": 0.01758, "s1.loss_bbox": 0.03039, "s2.loss_cls": 0.00866, "s2.loss_bbox": 0.03053, "loss": 0.1402, "time": 1.04192}
{"mode": "train", "epoch": 11, "iter": 600, "lr": 0.0, "memory": 19635, "data_time": 0.00427, "loss_rpn_cls": 0.00579, "loss_rpn_bbox": 0.00394, "s0.loss_cls": 0.03066, "s0.loss_bbox": 0.01422, "s1.loss_cls": 0.01645, "s1.loss_bbox": 0.03346, "s2.loss_cls": 0.00898, "s2.loss_bbox": 0.03546, "loss": 0.14898, "time": 1.04543}
{"mode": "train", "epoch": 11, "iter": 650, "lr": 0.0, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.0041, "loss_rpn_bbox": 0.00411, "s0.loss_cls": 0.02622, "s0.loss_bbox": 0.01343, "s1.loss_cls": 0.0165, "s1.loss_bbox": 0.03444, "s2.loss_cls": 0.00993, "s2.loss_bbox": 0.03554, "loss": 0.14428, "time": 1.06367}
{"mode": "train", "epoch": 11, "iter": 700, "lr": 0.0, "memory": 19635, "data_time": 0.00435, "loss_rpn_cls": 0.00532, "loss_rpn_bbox": 0.004, "s0.loss_cls": 0.03218, "s0.loss_bbox": 0.01519, "s1.loss_cls": 0.01671, "s1.loss_bbox": 0.03169, "s2.loss_cls": 0.00824, "s2.loss_bbox": 0.03234, "loss": 0.14567, "time": 1.05087}
{"mode": "train", "epoch": 11, "iter": 750, "lr": 0.0, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.0048, "loss_rpn_bbox": 0.00439, "s0.loss_cls": 0.03144, "s0.loss_bbox": 0.01619, "s1.loss_cls": 0.01734, "s1.loss_bbox": 0.03433, "s2.loss_cls": 0.0101, "s2.loss_bbox": 0.03455, "loss": 0.15313, "time": 1.04803}
{"mode": "train", "epoch": 11, "iter": 800, "lr": 0.0, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.00375, "loss_rpn_bbox": 0.00428, "s0.loss_cls": 0.03045, "s0.loss_bbox": 0.01343, "s1.loss_cls": 0.01921, "s1.loss_bbox": 0.03131, "s2.loss_cls": 0.0107, "s2.loss_bbox": 0.03387, "loss": 0.14701, "time": 1.03988}
{"mode": "train", "epoch": 11, "iter": 850, "lr": 0.0, "memory": 19635, "data_time": 0.00412, "loss_rpn_cls": 0.00397, "loss_rpn_bbox": 0.00438, "s0.loss_cls": 0.02744, "s0.loss_bbox": 0.01442, "s1.loss_cls": 0.01652, "s1.loss_bbox": 0.03078, "s2.loss_cls": 0.00894, "s2.loss_bbox": 0.0332, "loss": 0.13966, "time": 1.02972}
{"mode": "train", "epoch": 11, "iter": 900, "lr": 0.0, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.0043, "loss_rpn_bbox": 0.00457, "s0.loss_cls": 0.02686, "s0.loss_bbox": 0.01338, "s1.loss_cls": 0.016, "s1.loss_bbox": 0.02912, "s2.loss_cls": 0.0083, "s2.loss_bbox": 0.03243, "loss": 0.13496, "time": 1.05239}
{"mode": "train", "epoch": 11, "iter": 950, "lr": 0.0, "memory": 19635, "data_time": 0.00457, "loss_rpn_cls": 0.0038, "loss_rpn_bbox": 0.00436, "s0.loss_cls": 0.02536, "s0.loss_bbox": 0.01224, "s1.loss_cls": 0.0158, "s1.loss_bbox": 0.03071, "s2.loss_cls": 0.00905, "s2.loss_bbox": 0.03298, "loss": 0.13429, "time": 1.0482}
{"mode": "train", "epoch": 11, "iter": 1000, "lr": 0.0, "memory": 19635, "data_time": 0.00413, "loss_rpn_cls": 0.00473, "loss_rpn_bbox": 0.00437, "s0.loss_cls": 0.02644, "s0.loss_bbox": 0.01327, "s1.loss_cls": 0.01602, "s1.loss_bbox": 0.02994, "s2.loss_cls": 0.00914, "s2.loss_bbox": 0.0317, "loss": 0.13561, "time": 1.0539}
{"mode": "train", "epoch": 11, "iter": 1050, "lr": 0.0, "memory": 19635, "data_time": 0.0042, "loss_rpn_cls": 0.00464, "loss_rpn_bbox": 0.00454, "s0.loss_cls": 0.0281, "s0.loss_bbox": 0.01426, "s1.loss_cls": 0.01741, "s1.loss_bbox": 0.03073, "s2.loss_cls": 0.00855, "s2.loss_bbox": 0.03153, "loss": 0.13976, "time": 1.05215}
{"mode": "train", "epoch": 11, "iter": 1100, "lr": 0.0, "memory": 19635, "data_time": 0.00435, "loss_rpn_cls": 0.00359, "loss_rpn_bbox": 0.00402, "s0.loss_cls": 0.02776, "s0.loss_bbox": 0.01245, "s1.loss_cls": 0.01606, "s1.loss_bbox": 0.02877, "s2.loss_cls": 0.00788, "s2.loss_bbox": 0.031, "loss": 0.13154, "time": 1.04486}
{"mode": "train", "epoch": 11, "iter": 1150, "lr": 0.0, "memory": 19635, "data_time": 0.00416, "loss_rpn_cls": 0.00289, "loss_rpn_bbox": 0.00408, "s0.loss_cls": 0.02445, "s0.loss_bbox": 0.01207, "s1.loss_cls": 0.01422, "s1.loss_bbox": 0.03258, "s2.loss_cls": 0.00785, "s2.loss_bbox": 0.03663, "loss": 0.13478, "time": 1.05057}
{"mode": "train", "epoch": 11, "iter": 1200, "lr": 0.0, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00512, "loss_rpn_bbox": 0.00433, "s0.loss_cls": 0.02924, "s0.loss_bbox": 0.01349, "s1.loss_cls": 0.01839, "s1.loss_bbox": 0.03076, "s2.loss_cls": 0.01023, "s2.loss_bbox": 0.03052, "loss": 0.14208, "time": 1.05355}
{"mode": "train", "epoch": 11, "iter": 1250, "lr": 0.0, "memory": 19635, "data_time": 0.00413, "loss_rpn_cls": 0.00346, "loss_rpn_bbox": 0.0043, "s0.loss_cls": 0.02312, "s0.loss_bbox": 0.0123, "s1.loss_cls": 0.01429, "s1.loss_bbox": 0.02861, "s2.loss_cls": 0.00716, "s2.loss_bbox": 0.03172, "loss": 0.12495, "time": 1.05161}
{"mode": "train", "epoch": 11, "iter": 1300, "lr": 0.0, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.00323, "loss_rpn_bbox": 0.00365, "s0.loss_cls": 0.02902, "s0.loss_bbox": 0.01439, "s1.loss_cls": 0.01676, "s1.loss_bbox": 0.03082, "s2.loss_cls": 0.00907, "s2.loss_bbox": 0.03304, "loss": 0.13997, "time": 1.02634}
{"mode": "train", "epoch": 11, "iter": 1350, "lr": 0.0, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.00369, "loss_rpn_bbox": 0.00405, "s0.loss_cls": 0.02811, "s0.loss_bbox": 0.01459, "s1.loss_cls": 0.01705, "s1.loss_bbox": 0.03361, "s2.loss_cls": 0.00885, "s2.loss_bbox": 0.03481, "loss": 0.14476, "time": 1.04909}
{"mode": "train", "epoch": 11, "iter": 1400, "lr": 0.0, "memory": 19635, "data_time": 0.00444, "loss_rpn_cls": 0.00352, "loss_rpn_bbox": 0.00452, "s0.loss_cls": 0.02622, "s0.loss_bbox": 0.0133, "s1.loss_cls": 0.01544, "s1.loss_bbox": 0.03235, "s2.loss_cls": 0.00897, "s2.loss_bbox": 0.03408, "loss": 0.13839, "time": 1.04977}
{"mode": "train", "epoch": 11, "iter": 1450, "lr": 0.0, "memory": 19635, "data_time": 0.00439, "loss_rpn_cls": 0.00428, "loss_rpn_bbox": 0.00445, "s0.loss_cls": 0.03235, "s0.loss_bbox": 0.01698, "s1.loss_cls": 0.01858, "s1.loss_bbox": 0.03406, "s2.loss_cls": 0.01037, "s2.loss_bbox": 0.0343, "loss": 0.15536, "time": 1.02827}
{"mode": "train", "epoch": 11, "iter": 1500, "lr": 0.0, "memory": 19635, "data_time": 0.00421, "loss_rpn_cls": 0.0033, "loss_rpn_bbox": 0.00452, "s0.loss_cls": 0.02881, "s0.loss_bbox": 0.01442, "s1.loss_cls": 0.01538, "s1.loss_bbox": 0.03069, "s2.loss_cls": 0.00833, "s2.loss_bbox": 0.03396, "loss": 0.1394, "time": 1.06585}
{"mode": "train", "epoch": 11, "iter": 1550, "lr": 0.0, "memory": 19635, "data_time": 0.00411, "loss_rpn_cls": 0.00371, "loss_rpn_bbox": 0.00396, "s0.loss_cls": 0.02778, "s0.loss_bbox": 0.01392, "s1.loss_cls": 0.01714, "s1.loss_bbox": 0.0326, "s2.loss_cls": 0.00909, "s2.loss_bbox": 0.03456, "loss": 0.14275, "time": 1.06436}
{"mode": "train", "epoch": 11, "iter": 1600, "lr": 0.0, "memory": 19635, "data_time": 0.00423, "loss_rpn_cls": 0.00408, "loss_rpn_bbox": 0.00388, "s0.loss_cls": 0.03454, "s0.loss_bbox": 0.01747, "s1.loss_cls": 0.02085, "s1.loss_bbox": 0.03756, "s2.loss_cls": 0.01193, "s2.loss_bbox": 0.03682, "loss": 0.16713, "time": 1.04426}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.0, "memory": 19635, "data_time": 0.06207, "loss_rpn_cls": 0.00427, "loss_rpn_bbox": 0.00454, "s0.loss_cls": 0.03341, "s0.loss_bbox": 0.01591, "s1.loss_cls": 0.01915, "s1.loss_bbox": 0.03178, "s2.loss_cls": 0.00979, "s2.loss_bbox": 0.03207, "loss": 0.15092, "time": 1.1171}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 19635, "data_time": 0.00437, "loss_rpn_cls": 0.00353, "loss_rpn_bbox": 0.00357, "s0.loss_cls": 0.028, "s0.loss_bbox": 0.01388, "s1.loss_cls": 0.01738, "s1.loss_bbox": 0.03551, "s2.loss_cls": 0.01012, "s2.loss_bbox": 0.03462, "loss": 0.14662, "time": 1.06575}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.0, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.00515, "loss_rpn_bbox": 0.00503, "s0.loss_cls": 0.03224, "s0.loss_bbox": 0.01555, "s1.loss_cls": 0.01953, "s1.loss_bbox": 0.03709, "s2.loss_cls": 0.00999, "s2.loss_bbox": 0.03996, "loss": 0.16454, "time": 1.05818}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 0.0, "memory": 19635, "data_time": 0.00451, "loss_rpn_cls": 0.00545, "loss_rpn_bbox": 0.00502, "s0.loss_cls": 0.03103, "s0.loss_bbox": 0.01485, "s1.loss_cls": 0.01859, "s1.loss_bbox": 0.033, "s2.loss_cls": 0.0102, "s2.loss_bbox": 0.03371, "loss": 0.15186, "time": 1.07}
{"mode": "train", "epoch": 12, "iter": 250, "lr": 0.0, "memory": 19635, "data_time": 0.00441, "loss_rpn_cls": 0.00358, "loss_rpn_bbox": 0.00523, "s0.loss_cls": 0.02799, "s0.loss_bbox": 0.014, "s1.loss_cls": 0.0166, "s1.loss_bbox": 0.03428, "s2.loss_cls": 0.00851, "s2.loss_bbox": 0.03681, "loss": 0.147, "time": 1.0608}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 0.0, "memory": 19635, "data_time": 0.00426, "loss_rpn_cls": 0.00367, "loss_rpn_bbox": 0.00439, "s0.loss_cls": 0.0276, "s0.loss_bbox": 0.01279, "s1.loss_cls": 0.01505, "s1.loss_bbox": 0.02543, "s2.loss_cls": 0.00769, "s2.loss_bbox": 0.02758, "loss": 0.1242, "time": 1.06155}
{"mode": "train", "epoch": 12, "iter": 350, "lr": 0.0, "memory": 19635, "data_time": 0.0043, "loss_rpn_cls": 0.00722, "loss_rpn_bbox": 0.00334, "s0.loss_cls": 0.02228, "s0.loss_bbox": 0.01115, "s1.loss_cls": 0.01372, "s1.loss_bbox": 0.02672, "s2.loss_cls": 0.00741, "s2.loss_bbox": 0.02982, "loss": 0.12166, "time": 1.04644}
{"mode": "train", "epoch": 12, "iter": 400, "lr": 0.0, "memory": 19635, "data_time": 0.00437, "loss_rpn_cls": 0.00307, "loss_rpn_bbox": 0.00438, "s0.loss_cls": 0.02795, "s0.loss_bbox": 0.01408, "s1.loss_cls": 0.01682, "s1.loss_bbox": 0.03195, "s2.loss_cls": 0.00886, "s2.loss_bbox": 0.03482, "loss": 0.14192, "time": 1.06772}
{"mode": "train", "epoch": 12, "iter": 450, "lr": 0.0, "memory": 19635, "data_time": 0.00429, "loss_rpn_cls": 0.00427, "loss_rpn_bbox": 0.00437, "s0.loss_cls": 0.02696, "s0.loss_bbox": 0.01432, "s1.loss_cls": 0.01567, "s1.loss_bbox": 0.03438, "s2.loss_cls": 0.00938, "s2.loss_bbox": 0.03537, "loss": 0.1447, "time": 1.06174}
{"mode": "train", "epoch": 12, "iter": 500, "lr": 0.0, "memory": 19635, "data_time": 0.00436, "loss_rpn_cls": 0.00402, "loss_rpn_bbox": 0.00375, "s0.loss_cls": 0.03059, "s0.loss_bbox": 0.01606, "s1.loss_cls": 0.01862, "s1.loss_bbox": 0.0366, "s2.loss_cls": 0.01071, "s2.loss_bbox": 0.03457, "loss": 0.15491, "time": 1.0435}
{"mode": "train", "epoch": 12, "iter": 550, "lr": 0.0, "memory": 19635, "data_time": 0.00458, "loss_rpn_cls": 0.00446, "loss_rpn_bbox": 0.00461, "s0.loss_cls": 0.03293, "s0.loss_bbox": 0.01801, "s1.loss_cls": 0.01933, "s1.loss_bbox": 0.03409, "s2.loss_cls": 0.01052, "s2.loss_bbox": 0.03494, "loss": 0.15889, "time": 1.06532}
{"mode": "train", "epoch": 12, "iter": 600, "lr": 0.0, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00491, "loss_rpn_bbox": 0.0046, "s0.loss_cls": 0.02501, "s0.loss_bbox": 0.01245, "s1.loss_cls": 0.01526, "s1.loss_bbox": 0.03119, "s2.loss_cls": 0.0083, "s2.loss_bbox": 0.03219, "loss": 0.1339, "time": 1.0504}
{"mode": "train", "epoch": 12, "iter": 650, "lr": 0.0, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.00345, "loss_rpn_bbox": 0.00416, "s0.loss_cls": 0.02667, "s0.loss_bbox": 0.01384, "s1.loss_cls": 0.01517, "s1.loss_bbox": 0.03143, "s2.loss_cls": 0.00808, "s2.loss_bbox": 0.03116, "loss": 0.13394, "time": 1.0635}
{"mode": "train", "epoch": 12, "iter": 700, "lr": 0.0, "memory": 19635, "data_time": 0.00427, "loss_rpn_cls": 0.00361, "loss_rpn_bbox": 0.00358, "s0.loss_cls": 0.0262, "s0.loss_bbox": 0.0137, "s1.loss_cls": 0.01577, "s1.loss_bbox": 0.03294, "s2.loss_cls": 0.00894, "s2.loss_bbox": 0.03632, "loss": 0.14106, "time": 1.04895}
{"mode": "train", "epoch": 12, "iter": 750, "lr": 0.0, "memory": 19635, "data_time": 0.00426, "loss_rpn_cls": 0.00405, "loss_rpn_bbox": 0.00448, "s0.loss_cls": 0.02621, "s0.loss_bbox": 0.01134, "s1.loss_cls": 0.01531, "s1.loss_bbox": 0.02768, "s2.loss_cls": 0.00798, "s2.loss_bbox": 0.03196, "loss": 0.12902, "time": 1.05902}
{"mode": "train", "epoch": 12, "iter": 800, "lr": 0.0, "memory": 19635, "data_time": 0.00419, "loss_rpn_cls": 0.00553, "loss_rpn_bbox": 0.0041, "s0.loss_cls": 0.03758, "s0.loss_bbox": 0.01999, "s1.loss_cls": 0.02052, "s1.loss_bbox": 0.0363, "s2.loss_cls": 0.01056, "s2.loss_bbox": 0.03596, "loss": 0.17054, "time": 1.05063}
{"mode": "train", "epoch": 12, "iter": 850, "lr": 0.0, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.00289, "loss_rpn_bbox": 0.00387, "s0.loss_cls": 0.02623, "s0.loss_bbox": 0.01296, "s1.loss_cls": 0.01522, "s1.loss_bbox": 0.03128, "s2.loss_cls": 0.00855, "s2.loss_bbox": 0.03605, "loss": 0.13705, "time": 1.06914}
{"mode": "train", "epoch": 12, "iter": 900, "lr": 0.0, "memory": 19635, "data_time": 0.00439, "loss_rpn_cls": 0.00448, "loss_rpn_bbox": 0.00407, "s0.loss_cls": 0.02999, "s0.loss_bbox": 0.0153, "s1.loss_cls": 0.01693, "s1.loss_bbox": 0.03172, "s2.loss_cls": 0.00913, "s2.loss_bbox": 0.03201, "loss": 0.14362, "time": 1.04114}
{"mode": "train", "epoch": 12, "iter": 950, "lr": 0.0, "memory": 19635, "data_time": 0.00457, "loss_rpn_cls": 0.00497, "loss_rpn_bbox": 0.00415, "s0.loss_cls": 0.03326, "s0.loss_bbox": 0.01697, "s1.loss_cls": 0.01836, "s1.loss_bbox": 0.03922, "s2.loss_cls": 0.01024, "s2.loss_bbox": 0.03903, "loss": 0.16619, "time": 1.04882}
{"mode": "train", "epoch": 12, "iter": 1000, "lr": 0.0, "memory": 19635, "data_time": 0.00467, "loss_rpn_cls": 0.00314, "loss_rpn_bbox": 0.00325, "s0.loss_cls": 0.02254, "s0.loss_bbox": 0.01058, "s1.loss_cls": 0.0149, "s1.loss_bbox": 0.02779, "s2.loss_cls": 0.00731, "s2.loss_bbox": 0.0325, "loss": 0.122, "time": 1.04701}
{"mode": "train", "epoch": 12, "iter": 1050, "lr": 0.0, "memory": 19635, "data_time": 0.00438, "loss_rpn_cls": 0.00347, "loss_rpn_bbox": 0.00383, "s0.loss_cls": 0.02557, "s0.loss_bbox": 0.01282, "s1.loss_cls": 0.01578, "s1.loss_bbox": 0.03076, "s2.loss_cls": 0.00936, "s2.loss_bbox": 0.03406, "loss": 0.13565, "time": 1.0717}
{"mode": "train", "epoch": 12, "iter": 1100, "lr": 0.0, "memory": 19635, "data_time": 0.00425, "loss_rpn_cls": 0.00607, "loss_rpn_bbox": 0.00445, "s0.loss_cls": 0.02833, "s0.loss_bbox": 0.0126, "s1.loss_cls": 0.01856, "s1.loss_bbox": 0.03113, "s2.loss_cls": 0.00994, "s2.loss_bbox": 0.03307, "loss": 0.14416, "time": 1.05941}
{"mode": "train", "epoch": 12, "iter": 1150, "lr": 0.0, "memory": 19635, "data_time": 0.00414, "loss_rpn_cls": 0.00369, "loss_rpn_bbox": 0.00408, "s0.loss_cls": 0.03229, "s0.loss_bbox": 0.01632, "s1.loss_cls": 0.01919, "s1.loss_bbox": 0.03783, "s2.loss_cls": 0.0107, "s2.loss_bbox": 0.03902, "loss": 0.16312, "time": 1.04845}
{"mode": "train", "epoch": 12, "iter": 1200, "lr": 0.0, "memory": 19635, "data_time": 0.00443, "loss_rpn_cls": 0.00491, "loss_rpn_bbox": 0.00432, "s0.loss_cls": 0.0275, "s0.loss_bbox": 0.01493, "s1.loss_cls": 0.01702, "s1.loss_bbox": 0.0352, "s2.loss_cls": 0.00977, "s2.loss_bbox": 0.0351, "loss": 0.14874, "time": 1.05174}
{"mode": "train", "epoch": 12, "iter": 1250, "lr": 0.0, "memory": 19635, "data_time": 0.00453, "loss_rpn_cls": 0.00482, "loss_rpn_bbox": 0.00473, "s0.loss_cls": 0.02673, "s0.loss_bbox": 0.01332, "s1.loss_cls": 0.0159, "s1.loss_bbox": 0.03161, "s2.loss_cls": 0.00845, "s2.loss_bbox": 0.03165, "loss": 0.13719, "time": 1.04538}
{"mode": "train", "epoch": 12, "iter": 1300, "lr": 0.0, "memory": 19635, "data_time": 0.0046, "loss_rpn_cls": 0.00491, "loss_rpn_bbox": 0.00503, "s0.loss_cls": 0.03319, "s0.loss_bbox": 0.01716, "s1.loss_cls": 0.01876, "s1.loss_bbox": 0.03571, "s2.loss_cls": 0.00989, "s2.loss_bbox": 0.03836, "loss": 0.163, "time": 1.03634}
{"mode": "train", "epoch": 12, "iter": 1350, "lr": 0.0, "memory": 19635, "data_time": 0.00412, "loss_rpn_cls": 0.00481, "loss_rpn_bbox": 0.00459, "s0.loss_cls": 0.03366, "s0.loss_bbox": 0.01636, "s1.loss_cls": 0.01982, "s1.loss_bbox": 0.0358, "s2.loss_cls": 0.01012, "s2.loss_bbox": 0.03731, "loss": 0.16248, "time": 1.05697}
{"mode": "train", "epoch": 12, "iter": 1400, "lr": 0.0, "memory": 19635, "data_time": 0.00422, "loss_rpn_cls": 0.0036, "loss_rpn_bbox": 0.00509, "s0.loss_cls": 0.0269, "s0.loss_bbox": 0.01251, "s1.loss_cls": 0.01656, "s1.loss_bbox": 0.03072, "s2.loss_cls": 0.00971, "s2.loss_bbox": 0.03252, "loss": 0.13761, "time": 1.04335}
{"mode": "train", "epoch": 12, "iter": 1450, "lr": 0.0, "memory": 19635, "data_time": 0.00428, "loss_rpn_cls": 0.00259, "loss_rpn_bbox": 0.0032, "s0.loss_cls": 0.0255, "s0.loss_bbox": 0.01351, "s1.loss_cls": 0.01589, "s1.loss_bbox": 0.03385, "s2.loss_cls": 0.00892, "s2.loss_bbox": 0.03592, "loss": 0.13938, "time": 1.06101}
{"mode": "train", "epoch": 12, "iter": 1500, "lr": 0.0, "memory": 19635, "data_time": 0.00433, "loss_rpn_cls": 0.00421, "loss_rpn_bbox": 0.00395, "s0.loss_cls": 0.03266, "s0.loss_bbox": 0.01517, "s1.loss_cls": 0.01873, "s1.loss_bbox": 0.03506, "s2.loss_cls": 0.01046, "s2.loss_bbox": 0.03547, "loss": 0.15569, "time": 1.06673}
{"mode": "train", "epoch": 12, "iter": 1550, "lr": 0.0, "memory": 19635, "data_time": 0.00435, "loss_rpn_cls": 0.00321, "loss_rpn_bbox": 0.00377, "s0.loss_cls": 0.0238, "s0.loss_bbox": 0.01136, "s1.loss_cls": 0.01388, "s1.loss_bbox": 0.02767, "s2.loss_cls": 0.00763, "s2.loss_bbox": 0.03081, "loss": 0.12213, "time": 1.06185}
{"mode": "train", "epoch": 12, "iter": 1600, "lr": 0.0, "memory": 19635, "data_time": 0.00416, "loss_rpn_cls": 0.00698, "loss_rpn_bbox": 0.00427, "s0.loss_cls": 0.02725, "s0.loss_bbox": 0.01413, "s1.loss_cls": 0.01673, "s1.loss_bbox": 0.0337, "s2.loss_cls": 0.00975, "s2.loss_bbox": 0.03495, "loss": 0.14775, "time": 1.04848}
{"mode": "val", "epoch": 12, "iter": 735, "lr": 0.0, "bbox_mAP": 0.533, "bbox_mAP_50": 0.669, "bbox_mAP_75": 0.594, "bbox_mAP_s": 0.075, "bbox_mAP_m": 0.254, "bbox_mAP_l": 0.6, "bbox_mAP_copypaste": "0.533 0.669 0.594 0.075 0.254 0.600"}
{"env_info": "sys.platform: linux\nPython: 3.8.12 | packaged by conda-forge | (default, Oct 12 2021, 21:59:51) [GCC 9.4.0]\nCUDA available: True\nGPU 0,1,2,3,4: NVIDIA RTX A6000\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.6, V11.6.55\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.11.0a0+17540c5\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2019.0.5 Product Build 20190808 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.3.3 (Git Hash N/A)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_86,code=compute_86\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS=-fno-gnu-unique -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=ON, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0a0\nOpenCV: 4.5.5\nMMCV: 1.6.1\nMMCV Compiler: GCC 9.4\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.25.2+", "config": "base = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0'\nckpt = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_large_patch4_window7_224_22k.pth'\nmodel = dict(\n    type='DualDet',\n    backbone=dict(\n        type='DualViT',\n        embed_dims=192,\n        depths=[2, 2, 18, 2],\n        num_heads=[6, 12, 24, 48],\n        drop_path_rate=0.3,\n        convert_weights=True,\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_large_patch4_window7_224_22k.pth'\n        )),\n    neck=dict(\n        type='DualFPN',\n        in_channels=[192, 384, 768, 1536],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=1.0)),\n    roi_head=dict(\n        type='CascadeRoIHead',\n        num_stages=3,\n        stage_loss_weights=[1, 0.5, 0.25],\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=[\n            dict(\n                type='BoxHead',\n                num_classes=10,\n                reg_class_agnostic=True,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.1, 0.1, 0.2, 0.2]),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='BoxHead',\n                num_classes=10,\n                reg_class_agnostic=True,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.05, 0.05, 0.1, 0.1]),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0,\n                               loss_weight=1.0)),\n            dict(\n                type='BoxHead',\n                num_classes=10,\n                reg_class_agnostic=True,\n                bbox_coder=dict(\n                    type='DeltaXYWHBBoxCoder',\n                    target_means=[0.0, 0.0, 0.0, 0.0],\n                    target_stds=[0.033, 0.033, 0.067, 0.067]),\n                loss_bbox=dict(type='SmoothL1Loss', beta=1.0, loss_weight=1.0))\n        ]),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                ignore_iof_thr=-1,\n                match_low_quality=True),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                neg_pos_ub=-1,\n                pos_fraction=0.5,\n                add_gt_as_proposals=False),\n            debug=False,\n            pos_weight=-1,\n            allowed_border=-1),\n        rpn_proposal=dict(\n            nms=dict(type='nms', iou_threshold=0.7),\n            nms_pre=2000,\n            min_bbox_size=0,\n            max_per_img=1000),\n        rcnn=[\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.5,\n                    neg_iou_thr=0.5,\n                    min_pos_iou=0.5,\n                    ignore_iof_thr=-1,\n                    match_low_quality=True),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    neg_pos_ub=-1,\n                    pos_fraction=0.25,\n                    add_gt_as_proposals=True),\n                debug=False,\n                mask_size=28,\n                pos_weight=-1),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.6,\n                    neg_iou_thr=0.6,\n                    min_pos_iou=0.6,\n                    ignore_iof_thr=-1,\n                    match_low_quality=True),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    neg_pos_ub=-1,\n                    pos_fraction=0.25,\n                    add_gt_as_proposals=True),\n                debug=False,\n                mask_size=28,\n                pos_weight=-1),\n            dict(\n                assigner=dict(\n                    type='MaxIoUAssigner',\n                    pos_iou_thr=0.7,\n                    neg_iou_thr=0.7,\n                    min_pos_iou=0.7,\n                    ignore_iof_thr=-1,\n                    match_low_quality=True),\n                sampler=dict(\n                    type='RandomSampler',\n                    num=512,\n                    neg_pos_ub=-1,\n                    pos_fraction=0.25,\n                    add_gt_as_proposals=True),\n                debug=False,\n                mask_size=28,\n                pos_weight=-1)\n        ]),\n    test_cfg=dict(\n        rpn=dict(\n            nms=dict(type='nms', iou_threshold=0.7),\n            nms_pre=1000,\n            min_bbox_size=0,\n            max_per_img=1000),\n        rcnn=dict(\n            nms=dict(type='nms', iou_threshold=0.5),\n            score_thr=0.05,\n            max_per_img=100)))\ndataset_type = 'ROBINDataset'\ndata_root = '../Dataset/ROBINv1.1/'\nsamples_per_gpu = 1\nworkers_per_gpu = 4\nimage_norm = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile', to_float32=False, color_type='color'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=False),\n    dict(\n        type='Resize',\n        img_scale=[(1333, 640), (1333, 800)],\n        multiscale_mode='range',\n        keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='MixAugment'),\n    dict(type='GridMask'),\n    dict(type='Weather'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=1,\n    workers_per_gpu=4,\n    train=dict(\n        type='ROBINDataset',\n        ann_file='../Dataset/ROBINv1.1/train/train.json',\n        pipeline=[\n            dict(\n                type='LoadImageFromFile', to_float32=False,\n                color_type='color'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=False),\n            dict(\n                type='Resize',\n                img_scale=[(1333, 640), (1333, 800)],\n                multiscale_mode='range',\n                keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(type='MixAugment'),\n            dict(type='GridMask'),\n            dict(type='Weather'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='ROBINDataset',\n        ann_file='../Dataset/ROBINv1.1/iid_test/iid.json',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='ROBINDataset',\n        ann_file='../Dataset/ROBINv1.1/iid_test/iid.json',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\noptimizer = dict(\n    type='AdamW',\n    lr=0.0001,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            norm=dict(decay_mult=0.0),\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=None)\nfp16 = dict(loss_scale='dynamic')\nlr_config = dict(\n    step=[8, 11],\n    policy='step',\n    warmup='linear',\n    warmup_iters=1000,\n    warmup_ratio=0.001)\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=12)\nevaluation = dict(interval=12, metric='bbox')\nlog_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=True, base_batch_size=16)\nwork_dir = './weights/exp10'\ngpu_ids = range(0, 5)\n", "seed": 0, "exp_name": "exp10.py"}
